summary(multimod_Ne_Loc)
z_multimod_Ne_Loc <- summary(multimod_Ne_Loc)$coefficients/summary(multimod_Ne_Loc)$standard.errors
p_multimod_Ne_Loc <- (1-pnorm(abs(z_multimod_Ne_Loc),0,1))*2
p_multimod_Ne_Loc
n_mos$Nets <- relevel(n_mos$Nets, ref = "UTN")
multimod_Ne_Loc <- multinom(Location ~ Nets+Count, data = n_mos)
# # weights:  18 (10 variable)
# initial  value 711.900763
# iter  10 value 682.558178
# final  value 681.945688
# converged
summary(multimod_Ne_Loc)
z_multimod_Ne_Loc <- summary(multimod_Ne_Loc)$coefficients/summary(multimod_Ne_Loc)$standard.errors
p_multimod_Ne_Loc <- (1-pnorm(abs(z_multimod_Ne_Loc),0,1))*2
p_multimod_Ne_Loc
mor_3_1 <- glm(Dead~Location+Treatment + Location*Treatmen,
data = mor_reg, family = binomial("logit"))
summary(mor_3_1)
mor_3_1 <- glm(Dead~Location+Treatment + Location*Treatment,
data = mor_reg, family = binomial("logit"))
summary(mor_3_1)
mor_2_q <- glm(Mortality~Location+Treatment + Location*Treatment,
data = m_mos, family = quasibinomial("logit"))
mor_3_2 <- glm(Dead~Location+WashedStatus + Location*WashedStatus,
data = mor_reg, family = binomial("logit"))
summary(mor_3_2)
mor_3_3 <- glm(Dead~Location+Insecticide + Location*Insecticide,
data = mor_reg, family = binomial("logit"))
summary(mor_3_3)
mor_3_4 <- glm(Dead~Location+Nets + Location*Nets,
data = mor_reg, family = binomial("logit"))
summary(mor_3_4)
###Mixed effect model
##Random effect: individual random effect (per hut per night)
mor_1_ran <- glmer(Dead~Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_ran)
View(mor_reg)
rm(mor_1_ran
)
mor_1_1_ran <- glmer(Dead~Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_1_ran)
mor_1_1_ran <- glm(Dead~Location  + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_1_ran)
mor_1_1_ran <- glmer(Dead~Location  + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_1_ran)
mor_1_2_ran <- glmer(Dead~WashedStatus+ (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_2_ran)
mor_1_3_ran <- glm(Dead~Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_3_ran)
mor_1_3_ran <- glmer(Dead~Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_3_ran)
mor_1_4_ran <- glmer(Dead~Insecticide + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_4_ran)
summary(mor_1_3_ran)
summary(mor_1_4_ran)
mor_1_5_ran <- glmer(Dead~Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_5_ran)
mor_1_5_ran <- glmer(Dead~Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_5_ran)
##AIC: 4147.3
##Variance of the random effect: 1.485
mor_1_1_ran <- glmer(Dead~Location  + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_1_ran)
summary(mor_1_3_ran)
mor_2_1_ran <- glmer(Dead~Location+Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_2_1_ran)
mor_2_2_ran <- glmer(Dead~Location+WashedStatus + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_2_2_ran)
mor_2_3_ran <- glmer(Dead~Location+Insecticide + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_2_3_ran)
mor_2_4_ran <- glmer(Dead~Location+Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_2_4_ran)
mor_3_1_ran <- glmer(Dead~Location+Treatment + Location*Treatment +(1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_1_ran)
mor_3_2_ran <- glmer(Dead~Location+WashedStatus + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_2_ran)
##AIC: 4047.5
mor_3_2_ran <- glmer(Dead~Location+WashedStatus+Location*WashedStatus + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_2_ran)
mor_3_3_ran <- glmer(Dead~Location+Insecticide + Location*Insecticide +(1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_3_ran)
mor_3_4_ran <- glmer(Dead~Location+Nets + Location*Nets +(1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_4_ran)
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), fill = 'red', size = 3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
####glmms
library(lme4)
library(tidyverse)
library(DHARMa)
library(lubridate)
library(MASS)
library(merTools)
library(ggpubr)
library(ggpmisc)
library(nnet)
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), fill = 'red', size = 3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), color = 'red', size = 3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), color = 'red', size = 3, shape = 23)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), color = 'red', fill = 'red', alpha=0.5, size = 2.5, shape = 23)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), color = 'red', fill = 'red', alpha=0.3, size = 2.5, shape = 23)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
View(predxNet_W)
####glmms
library(lme4)
library(tidyverse)
library(DHARMa)
library(lubridate)
library(MASS)
library(merTools)
library(ggpubr)
library(ggpmisc)
library(nnet)
source("~/Desktop/Second project/R/glmm_functions.R")
View(m_mos)
View(mor_reg)
View(m_mos)
###Plot the data to find the appropriate distribution for the data
ggplot(m_mos, aes(x=Mortality, fill = Treatment))+
geom_histogram(binwidth = 0.1, boundary = 0, alpha=0.5)+
geom_freqpoly(aes(color = Treatment), binwidth = 0.1, boundary = 0)+
facet_wrap(vars(Treatment))+
labs(title  = "Histogram and line graph of mortality of mosquitoes by Treatment")+
theme(plot.title = element_text(size=13, hjust = 0.5))+
scale_x_continuous(limits = c(0,1))
typeof(m_mos$Date)
m_mos$Date <- as.factor(m_mos$Date)
m_mos$Location <- as.factor(m_mos$Location)
ggplot(m_mos, aes(y = Mortality, x = Date))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
facet_grid(vars(Location), vars(Treatment))
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%D")
typeof(m_mos$Date)
m_mos$Date <- as.Date(m_mos$Date)
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%D")
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%W")
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%W",
date_minor_breaks = "1 day")
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%W",
date_minor_breaks = "1 day")+
labs(x = "Week")
ggsave("Dotplot of daily mortality by Location and Treatment.jpeg",
device = jpeg, width = 8, height = 5.5)
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%W",
date_minor_breaks = "1 day")+
labs(title = "daily mortality by Location and Treatment",
x = "Week")
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%W",
date_minor_breaks = "1 day")+
labs(title = "daily mortality by Location and Treatment",
x = "Week")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%W",
date_minor_breaks = "1 day")+
labs(title = "daily mortality by location and treatment",
x = "Week")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(m_mos, aes(y = Mortality, x = Date, color = Nets))+
geom_point()+
facet_grid(vars(Location), vars(Treatment))+
scale_x_date(date_breaks = "1 week", date_labels = "%W",
date_minor_breaks = "1 day")+
labs(title = "Daily mortality by location and treatment",
x = "Week")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Dotplot of daily mortality by location and treatment.jpeg",
device = jpeg, width = 8, height = 5.5)
ggplot(Describe_loc_tr)+
geom_boxplot(aes(y=True.value, x=Model, fill = Treatment), alpha = 0.5)+
geom_point(aes(y=mean_pred, x=Model), fill = 'red', color = 'red',size = 2, shape = 23)+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Actual and predicted average number of mosquitoes by location and treatment",
y = "Number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
Describe_loc_tr <- predxNet_W %>%
separate(Category, c("Location","Treatment"), sep = "x", remove = FALSE) %>%
group_by(Category) %>%
mutate(mean_pred = mean(Predicted.value)) %>%
ungroup()
Describe_loc_tr <- as.data.frame(Describe_loc_tr)
Describe_loc_tr$Treatment <- as.character(Describe_loc_tr$Treatment)
ggplot(Describe_loc_tr)+
geom_boxplot(aes(y=True.value, x=Model, fill = Treatment), alpha = 0.5)+
geom_point(aes(y=mean_pred, x=Model), fill = 'red', color = 'red',size = 2, shape = 23)+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Actual and predicted average number of mosquitoes by location and treatment",
y = "Number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggsave("Boxplots of number of mosquitoes by location and treatment.jpeg", device = 'jpeg',
height = 6.5, width = 9)
###Plot the predicted values from the best model and the corresponding true values
predxNet_W %>%
separate(Category, c("Location","Treatment"), sep = "x", remove = FALSE) %>%
group_by(Category) %>%
mutate(mean_pred = mean(Predicted.value)) %>%
ungroup() %>%
ggplot(aes(x = Model))+
geom_boxplot(aes(y = True.value), fill = 'seagreen', alpha = 0.6)+
geom_point(aes(y=mean_pred), color = 'orange', alpha = 0.3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
facet_grid(vars(Location), vars(Treatment))
###Plot the predicted values from the best model and the corresponding true values
predxNet_W %>%
separate(Category, c("Location","Treatment"), sep = "x", remove = FALSE) %>%
group_by(Category) %>%
mutate(mean_pred = mean(Predicted.value)) %>%
ungroup() %>%
ggplot(aes(x = Model))+
geom_boxplot(aes(y = True.value), fill = 'seagreen', alpha = 0.6)+
geom_point(aes(y=mean_pred), color = 'orange', alpha = 0.3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(plot.title = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
facet_grid(vars(Location), vars(Treatment))
###Plot the predicted values from the best model and the corresponding true values
predxNet_W %>%
separate(Category, c("Location","Treatment"), sep = "x", remove = FALSE) %>%
group_by(Category) %>%
mutate(mean_pred = mean(Predicted.value)) %>%
ungroup() %>%
ggplot(aes(x = Model))+
geom_boxplot(aes(y = True.value), fill = 'seagreen', alpha = 0.6)+
geom_point(aes(y=mean_pred), color = 'orange', alpha = 0.3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(plot.title = element_text(size = 12, hjust = 0.5),
axis.title.y = element_text(size = 12),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
facet_grid(vars(Location), vars(Treatment))
ggsave("Best model estimates and real data plot (Treatment and Location with interaction).jpeg",
device = "jpeg", width = 12, height = 9)
summary(model_5_5)
ggplot(Describe_loc_tr)+
geom_boxplot(aes(y=True.value, x=Model, fill = Treatment), alpha = 0.5)+
geom_point(aes(y=mean_pred, x=Model), fill = 'red', color = 'red',size = 2, shape = 23)+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Actual and predicted average number of mosquitoes by location and treatment",
y = "Number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
mor_0 <- glm(Dead~1, data = mor_reg, family = binomial("log"))
summary(mor_0)
summary(mor_0)
mor_0 <- glm(Dead~1, data = mor_reg, family = binomial("log"))
summary(mor_0)
mor_4_1 <- glm(Dead~Location + Treatment + Nets,
data = mor_reg, family = binomial("logit"))
summary(mor_4_1)
mor_4_2 <- glm(Dead~Location + Treatment + Nets + Treatment * Nets ,
data = mor_reg, family = binomial("logit"))
summary(mor_4_2)
mor_4_1 <- glm(Dead~Location + WashedStatus + Nets,
data = mor_reg, family = binomial("logit"))
summary(mor_4_1)
mor_4_2 <- glm(Dead~Location + WashedStatus + Nets + WashedStatus * Nets ,
data = mor_reg, family = binomial("logit"))
summary(mor_4_2)
mor_4_1_ran <- glmer(Dead~Location + WashedStatus + Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_4_1_ran)
mor_4_1_Hut <- glmer(Dead~Location + WashedStatus + Nets + (1|Hut),
data = mor_reg, family = binomial("logit"))
summary(mor_4_1_Hut)
mor_reg$WashedStatus <- relevel(mor_reg$WashedStatus, ref = "UTN")
mor_reg$Nets <- relevel(mor_reg$Nets, ref = "UTN")
mor_4_1 <- glm(Dead~Location + WashedStatus + Nets,
data = mor_reg, family = binomial("logit"))
summary(mor_4_1)
mor_4_1_ran <- glmer(Dead~Location + WashedStatus + Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_4_1_ran)
##AIC: 4043.9
##Variance of the random effect: 1.279
mor_4_1_Hut <- glmer(Dead~Location + WashedStatus + Nets + (1|Hut),
data = mor_reg, family = binomial("logit"))
summary(mor_4_1_Hut)
##AIC: 4413.4
##Variance of the random effect: 0.08696
mor_4_1_Mix <- glmer(Dead~Location + WashedStatus + Nets + (1|Hut)+ (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_4_1_Mix)
##AIC: 4413.4
##Variance of the random effect: 0.08696
mor_4_2 <- glm(Dead~Location + WashedStatus + Nets + WashedStatus * Nets ,
data = mor_reg, family = binomial("logit"))
summary(mor_4_2)
mor_4_2_ran <- glm(Dead~Location + WashedStatus + Nets + WashedStatus * Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_4_2_ran)
mor_4_2_ran <- glmer(Dead~Location + WashedStatus + Nets + WashedStatus * Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_4_2_ran)
mor_4_2_Mix <- glmer(Dead~Location + WashedStatus + Nets + WashedStatus * Nets
+ (1|Hut) + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_4_2_Mix)
##AIC: 3995.1
mor_4_2_hut <- glmer(Dead~Location + WashedStatus + Nets + WashedStatus * Nets + (1|Hut),
data = mor_reg, family = binomial("logit"))
source("~/Desktop/Second project/R/0610 loop.R")
library(lme4)
library(tidyverse)
library(DHARMa)
library(lubridate)
library(MASS)
library(merTools)
library(ggpubr)
library(ggpmisc)
help("update")
mor_4_2_Mix <- glmer(Dead~Location + WashedStatus + Nets + WashedStatus * Nets
+ (1|Hut) + (1|marker),
data = mor_reg, family = binomial("logit"))
update(mor_4_2_Mix, control = glmerControl(optimizer = "bobyqa"))
mor_4_2 <- glm(Dead~Location + WashedStatus + Nets + WashedStatus * Nets ,
data = mor_reg, family = binomial("logit"))
mor_4_2_Mix <- glmer(Dead~Location + WashedStatus + Nets + WashedStatus * Nets
+ (1|Hut) + (1|marker),
data = mor_reg, family = binomial("logit"))
update(mor_4_2_Mix, control = glmerControl(optimizer = "bobyqa"))
test <- update(mor_4_2_Mix, control = glmerControl(optimizer = "bobyqa"))
summary(test)
summary(mor_4_2_Mix)
summary(mor_4_2_hut)
summary(mor_4_2)
##AIC: 3979.8
##Variance of the random effect: 0.9021
mor_3_1_ran <- update(mor_3_1_ran, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_1_ran)
mor_3_4_ran <- glmer(Dead~Location+Nets + Location*Nets +(1|marker),
data = mor_reg, family = binomial("logit"))
mor_3_4_ran <- update(mor_3_4_ran, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_4_ran)
mor_3_3_ran <- glmer(Dead~Location+Insecticide + Location*Insecticide +(1|marker),
data = mor_reg, family = binomial("logit"))
mor_3_3_ran <- update(mor_3_3_ran, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_3_ran)
mor_3_2_ran <- update(mor_3_2_ran, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_2_ran)
mor_3_1_ran <- update(mor_3_1_ran, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_1_ran)
### 3 Variables: Location and WashedStatus and Nets
mor_4_1 <- glm(Dead~Location + WashedStatus + Nets,
data = mor_reg, family = binomial("logit"))
mor_4_1_ran <- glmer(Dead~Location + WashedStatus + Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
mor_4_2 <- glm(Dead~Location + WashedStatus + Nets + WashedStatus * Nets ,
data = mor_reg, family = binomial("logit"))
mor_4_2_ran <- glmer(Dead~Location + WashedStatus + Nets + WashedStatus * Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_4_2_ran)
mor_4_2_ran <- update(mor_4_2_ran, control = glmerControl(optimizer = "bobyqa"))
summary(mor_4_2_ran)
mor_4_2_hut <- glmer(Dead~Location + WashedStatus + Nets + WashedStatus * Nets + (1|Hut),
data = mor_reg, family = binomial("logit"))
summary(mor_4_2_hut)
mor_4_2_Mix <- glmer(Dead~Location + WashedStatus + Nets + WashedStatus * Nets
+ (1|Hut) + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_4_2_Mix)
mor_4_2_Mix <- update(mor_4_2_Mix, control = glmerControl(optimizer = "bobyqa"))
summary(mor_4_2_Mix)
mor_4_1_Mix <- glmer(Dead~Location + WashedStatus + Nets + (1|Hut)+ (1|marker),
data = mor_reg, family = binomial("logit"))
mor_3_1_mix <- glmer(Dead~Location+Treatment + Location*Treatment +(1|marker) + (1|Hut),
data = mor_reg, family = binomial("logit"))
mor_3_1_mix <- update(mor_3_1_mix, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_1_mix)
mor_3_2_mix <- glmer(Dead~Location+WashedStatus + Location*WashedStatus +(1|marker) + (1|Hut),
data = mor_reg, family = binomial("logit"))
mor_3_2_mix <- update(mor_3_2_mix, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_2_mix)
mor_3_3_mix <- glmer(Dead~Location+Insecticide + Location*Insecticide +(1|marker) + (1|Hut),
data = mor_reg, family = binomial("logit"))
mor_3_3_mix <- update(mor_3_3_mix, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_3_mix)
mor_3_4_mix <- glmer(Dead~Location+Nets + Location*Nets +(1|marker) + (1|Hut),
data = mor_reg, family = binomial("logit"))
mor_3_4_mix <- update(mor_3_4_mix, control = glmerControl(optimizer = "bobyqa"))
summary(mor_3_4_mix)
summary(mor_3_4_mix)
summary(mor_4_2_Mix)
