labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality")+
geom_errorbar(data = mor_bf_pred_plot, aes(x=Fed, y = mean, ymin = lwr, ymax = upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
ggplot(mf_mos, aes(color = Location))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality")+
geom_errorbar(data = mor_bf_pred_plot, aes(x=Fed,ymin = lwr, ymax = upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
mor_bf_pred <- predictInterval(mor_fed_num_ms_diu_temp_range, mor_bf, type = "probability",
n.sims = 999,level= 0.95, .parallel = FALSE)
mor_bf_pred_plot <- cbind(mor_bf,mor_bf_pred)
mor_bf_pred_plot$Treatment <- relevel(as.factor(mor_bf_pred_plot$Treatment), ref = "UTN")
mor_bf_pred_mean <- mor_bf_pred_plot %>%
group_by(Treatment, Location, Fed)%>%
summarise(Mean = mean(fit))
ggplot(mf_mos, aes(color = Location))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality")+
geom_errorbar(data = mor_bf_pred_plot, aes(x=Fed,ymin = lwr, ymax = upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
mor_bf_pred_mean <- mor_bf_pred_plot %>%
group_by(Treatment, Location, Fed)%>%
summarise(Mean = mean(fit),
Lwr = mean(Lwr),
Upr = mean(Upr))
mor_bf_pred_plot <- cbind(mor_bf,mor_bf_pred)
mor_bf_pred <- predictInterval(mor_fed_num_ms_diu_temp_range, mor_bf, type = "probability",
level= 0.95, .parallel = FALSE)
mor_bf_pred_plot <- cbind(mor_bf,mor_bf_pred)
mor_bf_pred_plot$Treatment <- relevel(as.factor(mor_bf_pred_plot$Treatment), ref = "UTN")
mor_bf_pred_mean <- mor_bf_pred_plot %>%
group_by(Treatment, Location, Fed)%>%
summarise(Mean = mean(fit),
Lwr = mean(lwr),
Upr = mean(upr))
ggplot(mf_mos, aes(color = Location))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality")+
geom_errorbar(data = mor_bf_pred_mean, aes(x=Fed,ymin = Lwr, ymax = Upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
ggsave("Mortality corresponding blood feeding.jpeg", device = jpeg)
ggplot(pred_temp, aes(x = diurnal_temp_range, col = Location))+
geom_point(aes(y=Mortality))+
geom_line(aes(y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr, fill = Location), alpha = 0.7)+
facet_grid(vars(Location), vars(Treatment))+
labs(y = "Mortality/predicted mortality", x = "Temperature range during the trial time")
ggplot(test_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range")+
facet_grid(vars(Location),vars(Treatment))
mor_temp_df <-  data.frame(Treatment = character(),
Location  = character(),
Treatment = character(),
Fed = double(),
Total.Loc = double(),
Sleeper= character(),
marker = character(),
Hut = character(),
diurnal_temp_range = double())
for (i in 1:6){
for (j in 1:3){
df_pred <- data.frame(Treatment = rep(Treatment_levels[i],1000),
Location = rep(Loc_levels[j],1000),
Total.Loc = rep(15.5, 1000),
Fed = rep(0.5121384, 1000),
diurnal_temp_range =  rep(seq(0,10,0.01), length.out = 1000),
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
mor_temp_df <- rbind(mor_temp_df,df_pred)
}
}
mor_temp_pred <- predictInterval(mor_fed_num_ms_diu_temp_range, mor_temp_df, type = "probability",
n.sims = 999,.parallel = FALSE)
mor_temp_pred_plot <- cbind(mor_temp_df,mor_temp_pred)
mor_temp_pred_plot$Treatment <- relevel(as.factor(mor_temp_pred_plot$Treatment), ref = "UTN")
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range")+
facet_grid(vars(Location),vars(Treatment))
ggsave("Mortality vs temp range.jpeg", device = "jpeg")
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range")+
facet_grid(vars(Location),vars(Treatment))
ggsave("Mortality vs temp range.jpeg", device = "jpeg")
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
facet_grid(vars(Location),vars(Treatment))
ggsave("Mortality vs temp range.jpeg", device = "jpeg")
eq(0,1,5)
seq(0,1,5)
seq(0,1,5)
seq(0,10,5)
seq(0,10,2.5)
facet_grid(vars(Location),vars(Treatment))
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
scale_y_continuous(breaks = c(0,2.5,5,7.5,10))+
facet_grid(vars(Location),vars(Treatment))
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
scale_y_continuous(labels = c(0,2.5,5,7.5,10))+
facet_grid(vars(Location),vars(Treatment))
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
scale_y_continuous(limits = c(0,2.5,5,7.5,10))+
facet_grid(vars(Location),vars(Treatment))
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
scale_y_continuous(limits = c("0","2.5","5","7.5","10"))+
facet_grid(vars(Location),vars(Treatment))
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
scale_y_continuous(breaks = c("0","2.5","5","7.5","10"))+
facet_grid(vars(Location),vars(Treatment))
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
facet_grid(vars(Location),vars(Treatment))+
scale_x_continuous(labels = c(0,2,4,6,8,10))
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.7)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
facet_grid(vars(Location),vars(Treatment))+
scale_x_continuous(breaks = c(0,2,4,6,8,10))
ggsave("Mortality vs temp range.jpeg", device = "jpeg")
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.5)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
facet_grid(vars(Location),vars(Treatment))+
scale_x_continuous(breaks = c(0,2,4,6,8,10))
ggsave("Mortality vs temp range.jpeg", device = "jpeg")
ggplot(mf_mos, aes(color = Location))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality")+
geom_errorbar(data = mor_bf_pred_mean, aes(x=Fed,ymin = Lwr, ymax = Upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
ggplot(mf_mos, aes(color = Location))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality/Predicted mortality")+
geom_errorbar(data = mor_bf_pred_mean, aes(x=Fed,ymin = Lwr, ymax = Upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
ggplot(mf_mos, aes(color = Location))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality/Predicted mortality")+
geom_errorbar(data = mor_bf_pred_mean, aes(x=Fed,ymin = Lwr, ymax = Upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))+
scale_x_continuous(labels = c(0,0.5,1))
ggplot(mf_mos, aes(color = Location))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality/Predicted mortality")+
geom_errorbar(data = mor_bf_pred_mean, aes(x=Fed,ymin = Lwr, ymax = Upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))+
scale_x_continuous(breaks = c(0,0.5,1))
ggplot(mf_mos, aes(color = Location))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality/Predicted mortality")+
geom_errorbar(data = mor_bf_pred_mean, aes(x=Fed,ymin = Lwr, ymax = Upr),
col = "black", width= 0.3)+
geom_line(data = mor_bf_pred_mean, aes(x=Fed, y = Mean), col = "black")+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))+
scale_x_continuous(breaks = c(0,0.5,1))
ggsave("Mortality corresponding blood feeding.jpeg", device = jpeg)
summary(bf_num_loc_Rand_nw)
max(bf_mos$Total.Loc)
max(mor_fed$Total.Loc)
#52
mor_fed %>%
count(marker) %>%
filter(n == max(n))
#133
mor_fed %>%
count(Sleeper) %>%
filter(n == max(n))
bf_mos %>%
count(Hut) %>%
filter(n == max(n))
mor_fed %>%
count(Hut) %>%
filter(n == max(n))
bf_df <-  data.frame(Treatment = character(),
Location  = character(),
Total.Loc = double(),
Sleeper= character(),
marker = character(),
Hut = character())
for (i in 1:6){
for (j in 1:3){
df_pred <- data.frame(Treatment = rep(Treatment_levels[i],1000),
Location = rep(Loc_levels[j],1000),
Total.Loc = rep(seq(0,55,1), length.out = 1000),
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
bf_df <- rbind(bf_df,df_pred)
}
}
bf_pred <- predictInterval(bf_num_loc_Rand_nw, bf_df, type = "probability",
n.sims = 1000,.parallel = FALSE)
mor_fed %>%
count(WashedStatus) %>%
filter(n == max(n))
bf_df <-  data.frame(Treatment = character(),
Location  = character(),
WashedStatus = character(),
Total.Loc = double(),
Sleeper= character(),
marker = character(),
Hut = character())
for (i in 1:6){
for (j in 1:3){
df_pred <- data.frame(Treatment = rep(Treatment_levels[i],1000),
Location = rep(Loc_levels[j],1000),
Total.Loc = rep(seq(0,55,1), length.out = 1000),
WashedStatus = rep("unwashed",length.out = 1000)
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
bf_df <- rbind(bf_df,df_pred)
}
}
for (i in 1:6){
for (j in 1:3){
df_pred <- data.frame(Treatment = rep(Treatment_levels[i],1000),
Location = rep(Loc_levels[j],1000),
Total.Loc = rep(seq(0,55,1), length.out = 1000),
WashedStatus = rep("unwashed",length.out = 1000),
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
bf_df <- rbind(bf_df,df_pred)
}
}
bf_df <-  data.frame(Treatment = character(),
Location  = character(),
WashedStatus = character(),
Total.Loc = double(),
Sleeper= character(),
marker = character(),
Hut = character())
for (i in 1:6){
for (j in 1:3){
df_pred <- data.frame(Treatment = rep(Treatment_levels[i],1000),
Location = rep(Loc_levels[j],1000),
Total.Loc = rep(seq(0,55,1), length.out = 1000),
WashedStatus = rep("unwashed",length.out = 1000),
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
bf_df <- rbind(bf_df,df_pred)
}
}
bf_pred <- predictInterval(bf_num_loc_Rand_nw, bf_df, type = "probability",
n.sims = 1000,.parallel = FALSE)
bf_pred_plot <- cbind(bf_df,bf_pred)
bf_pred_plot$Treatment <- relevel(as.factor(bf_pred_plot$Treatment), ref = "UTN")
ggplot(bf_pred_plot, aes(x=Total.Loc, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.5)+
geom_line(aes(color = Location)) +
labs(y = "Predicted blood-feeding rate", x = "Number of mosquitoes")+
facet_grid(vars(Location),vars(Treatment))
View(bf_pred_plot)
summary(bf_num_loc_Rand_nw)
ggplot(bf_pred_plot, aes(x=Total.Loc, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.5)+
geom_line(aes(color = Location)) +
labs(y = "Predicted blood-feeding rate", x = "Number of mosquitoes")+
facet_grid(vars(Location),vars(WashedStatus))
bf_pred_plot$WashedStatus <- relevel(as.factor(bf_pred_plot$WashedStatus), ref = "UTN")
#unwashed
WashedStatus_levels <- levels(mor_fed$WashedStatus)
WashedStatus_levels
for (i in 1:3){
for (j in 1:3){
df_pred <- data.frame(Location = rep(Loc_levels[j],1000),
Total.Loc = rep(seq(0,55,1), length.out = 1000),
WashedStatus = rep(WashedStatus_levels[i],length.out = 1000),
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
bf_df <- rbind(bf_df,df_pred)
}
}
bf_df <-  data.frame(Location  = character(),
WashedStatus = character(),
Total.Loc = double(),
Sleeper= character(),
marker = character(),
Hut = character())
for (i in 1:3){
for (j in 1:3){
df_pred <- data.frame(Location = rep(Loc_levels[j],1000),
Total.Loc = rep(seq(0,55,1), length.out = 1000),
WashedStatus = rep(WashedStatus_levels[i],length.out = 1000),
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
bf_df <- rbind(bf_df,df_pred)
}
}
bf_pred <- predictInterval(bf_num_loc_Rand_nw, bf_df, type = "probability",
n.sims = 1000,.parallel = FALSE)
bf_pred_plot <- cbind(bf_df,bf_pred)
bf_pred_plot$Treatment <- relevel(as.factor(bf_pred_plot$Treatment), ref = "UTN")
bf_pred_plot$WashedStatus <- relevel(as.factor(bf_pred_plot$WashedStatus), ref = "UTN")
ggplot(bf_pred_plot, aes(x=Total.Loc, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.5)+
geom_line(aes(color = Location)) +
labs(y = "Predicted blood-feeding rate", x = "Number of mosquitoes")+
facet_grid(vars(Location),vars(WashedStatus))
bf_df <-  data.frame(Location  = character(),
WashedStatus = character(),
Total.Loc = integer(),
Sleeper= character(),
marker = character(),
Hut = character())
for (i in 1:3){
for (j in 1:3){
df_pred <- data.frame(Location = rep(Loc_levels[j],1000),
Total.Loc = rep(seq(0,55,1), length.out = 1000),
WashedStatus = rep(WashedStatus_levels[i],length.out = 1000),
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
bf_df <- rbind(bf_df,df_pred)
}
}
bf_pred <- predictInterval(bf_num_loc_Rand_nw, bf_df, type = "probability",
n.sims = 1000,.parallel = FALSE)
bf_pred_plot <- cbind(bf_df,bf_pred)
bf_pred_plot$WashedStatus <- relevel(as.factor(bf_pred_plot$WashedStatus), ref = "UTN")
ggplot(bf_pred_plot, aes(x=Total.Loc, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.5)+
geom_line(aes(color = Location)) +
labs(y = "Predicted blood-feeding rate", x = "Number of mosquitoes")+
facet_grid(vars(Location),vars(WashedStatus))
ggsave("blood-feeding rate n counts.jpeg", device = "jpeg")
bf_df <-  data.frame(Location  = character(),
WashedStatus = character(),
Total.Loc = double(),
Sleeper= character(),
marker = character(),
Hut = character())
for (i in 1:3){
for (j in 1:3){
df_pred <- data.frame(Location = rep(Loc_levels[j],1000),
Total.Loc = rep(seq(0,55,0.5), length.out = 1000),
WashedStatus = rep(WashedStatus_levels[i],length.out = 1000),
marker = as.character(rep(133, 1000)),
Sleeper = rep("Te.S4", length.out =1000),
Hut = rep("Te.C3", length.out =1000))
bf_df <- rbind(bf_df,df_pred)
}
}
bf_pred <- predictInterval(bf_num_loc_Rand_nw, bf_df, type = "probability",
n.sims = 1000,.parallel = FALSE)
bf_pred_plot <- cbind(bf_df,bf_pred)
bf_pred_plot$WashedStatus <- relevel(as.factor(bf_pred_plot$WashedStatus), ref = "UTN")
ggplot(bf_pred_plot, aes(x=Total.Loc, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.5)+
geom_line(aes(color = Location)) +
labs(y = "Predicted blood-feeding rate", x = "Number of mosquitoes")+
facet_grid(vars(Location),vars(WashedStatus))
ggsave("blood-feeding rate n counts.jpeg", device = "jpeg")
bf_pred <- predictInterval(bf_num_loc_Rand_nw, bf_df, type = "probability",level = 0.95,
n.sims = 1000,.parallel = FALSE)
bf_pred_plot <- cbind(bf_df,bf_pred)
bf_pred_plot$WashedStatus <- relevel(as.factor(bf_pred_plot$WashedStatus), ref = "UTN")
ggplot(bf_pred_plot, aes(x=Total.Loc, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.5)+
geom_line(aes(color = Location)) +
labs(y = "Predicted blood-feeding rate", x = "Number of mosquitoes")+
facet_grid(vars(Location),vars(WashedStatus))
ggsave("blood-feeding rate n counts.jpeg", device = "jpeg")
mor_temp_pred <- predictInterval(mor_fed_num_ms_diu_temp_range, mor_temp_df, type = "probability",
level = 0.95,n.sims = 999,.parallel = FALSE)
mor_temp_pred_plot <- cbind(mor_temp_df,mor_temp_pred)
mor_temp_pred_plot$Treatment <- relevel(as.factor(mor_temp_pred_plot$Treatment), ref = "UTN")
ggplot(mor_temp_pred_plot, aes(x=diurnal_temp_range, y = fit))+
geom_ribbon(aes(ymin = lwr, ymax = upr), alpha = 0.5)+
geom_line(aes(color = Location)) +
labs(y = "Predicted mortality", x = "Diurnal temperature range (°C)")+
facet_grid(vars(Location),vars(Treatment))+
scale_x_continuous(breaks = c(0,2,4,6,8,10))
ggsave("Mortality vs temp range.jpeg", device = "jpeg")
summary(mor_fed_num_ms_diu_temp_range)
summary(bf_num_loc_Rand_nw)
mean(diff(bf_pred$lwr, bf_pred$upr))
mean(bf_pred$lwr-bf_pred$upr))
mean(bf_pred$lwr-bf_pred$upr)
bf_pred$lwr-bf_pred$upr
summary(model_5_1_trial_range)
model_5_1_diu_temp <- glmer.nb(formula = Count~Location + WashedStatus+ (1|marker)
+ diurnal_temp_range, data = n_mos)
summary(model_5_1_diu_temp)
summary(glmer.nb(formula = Count~Location + WashedStatus+ (1|marker)
, data = n_mos))
summary(model_5_1_diu_temp)
model_5_1_trial_range <- glmer.nb(formula = Count~Location + WashedStatus+ (1|marker) + trial_temp_range, data = n_mos)
model_5_1_trial_range <- update(model_5_1_trial_range, control = glmerControl(optimizer = "bobyqa"))
summary(model_5_1_trial_range)
summary(model_5_1)
model_5_1 <- update(model_5_1, control = glmerControl(optimizer = "bobyqa"))
summary(model_5_1)
summary(model_5_1_trial_range)
