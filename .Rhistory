###Barplot of average number of mosquito in each location by Treatment
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))+
labs(title = "Mean and range of number of mosquitoes in each location by treatment")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggsave("Average and range of number of mosquitoes by treatment and location.jpeg")
###Barplot of average number of mosquito in each location by Treatment
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))
###Barplot of average number of mosquito in each location by Treatment
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
#geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))+
labs(title = "Average number of mosquitoes in each location by treatment")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggsave("Average number of mosquitoes by treatment and location.jpeg")
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point() + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE) +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted value of the models with random effect of Sleeper",
x = "True value", y = "Predicted value")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point() + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE) +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes from different models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point() + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'Steelblue') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes from different models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point() + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'dark green') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes from different models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point() + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE)+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes from different models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point() + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes from different models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point() + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and best fit lines from different models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point() + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggsave("Model comparisons with random effect of Sleeper.jpeg", device = 'jpeg')
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg')
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
plot.axis.x = element_text(size = 12))
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 16),
axis.text.x = element_text(size = 12))
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 13),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12),
strip.text = element_text(size = 10))
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 13),
strip.text = element_text(size = 10))
ggplot(pred_p_W, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
stat_poly_eq(formula = y ~ x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE,  color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper and Week",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 13),
strip.text = element_text(size = 10))
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg')
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg',
width = 8, length = 10)
help("ggsave")
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg',
width = 8, height = 10)
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg',
width = 10, height = 8)
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg',
width = 10, height = 7.5)
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg',
width = 8, height = 6)
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg',
width = 8.5, height = 6.5)
ggsave("Model comparisons with random effect of Sleeper and Week.jpeg", device = 'jpeg',
width = 9, height = 6.5)
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggsave("Model comparisons with random effect of Sleeper.jpeg", device = 'jpeg',
width = 9, height = 6.5)
###Barplot of average number of mosquito in each location by Treatment (With/without errorbar)
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))+
labs(title = "Mean and range of  number of mosquitoes in each location by treatment")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper",
x = "True value", y = "Predicted number of mosquitoes")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 13),
strip.text = element_text(size = 10))
ggsave("Model comparisons with random effect of Sleeper.jpeg", device = 'jpeg',
width = 9, height = 6.5)
###Barplot of average number of mosquito in each location by Treatment (With/without errorbar)
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))+
labs(title = "Mean and range of  number of mosquitoes in each location by treatment")+
theme(plot.title = element_text(hjust = 0.5, size = 12))
###Barplot of average number of mosquito in each location by Treatment (With/without errorbar)
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))+
labs(title = "Mean and range of  number of mosquitoes in each location by treatment")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 13),
strip.text = element_text(size = 10))
ggsave("Average and range of number of mosquitoes by treatment and location.jpeg",
width = 9, height = 6.5)
###Barplot of average number of mosquito in each location by Treatment (With/without errorbar)
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))+
labs(title = "Mean and range of number of mosquitoes in each location by treatment")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 13),
strip.text = element_text(size = 10))
ggsave("Average and range of number of mosquitoes by treatment and location.jpeg",
width = 9, height = 6.5)
###Barplot of average number of mosquito in each location by Treatment (With/without errorbar)
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
#geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))+
labs(title = "Average number of mosquitoes in each location by treatment")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 13),
strip.text = element_text(size = 10))
ggsave("Average of number of mosquitoes by treatment and location.jpeg",
width = 9, height = 6.5)
###Barplot of average number of mosquito in each location by Treatment (With/without errorbar)
n_mos %>%
group_by(Treatment, Location) %>%
summarise(Avg = mean(Count), max = max(Count), min = min(Count)) %>%
ggplot(aes(x = Location, y = Avg, color = Location))+
geom_col(aes(fill= Location))+
geom_errorbar(aes(x=Location, ymin=min, ymax= max), color = 'steelblue')+
facet_wrap(vars(Treatment))+
labs(title = "Mean and range number of mosquitoes in each location by treatment")+
theme(plot.title = element_text(hjust = 0.5, size = 12.5),
axis.text.x = element_text(size = 13),
axis.text.y = element_text(size = 13),
strip.text = element_text(size = 10))
ggsave("Average and range of number of mosquitoes by treatment and location.jpeg",
width = 9, height = 6.5)
ggplot(Rand_Sleeper_Week, aes( y=Point_est, colour = Var))+
geom_point(aes(x=Var))+
geom_errorbar(aes(x=Var, ymax = upper, ymin = lower))+
facet_wrap(vars(Model), ncol = 2)+
labs(title = "Coefficients and 95% CI in each categorical variable: Models with random effect of Sleeper and week")+
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.text.x = element_text(angle = 90, hjust =0.95, vjust = 0.2))
ggplot(Rand_Sleeper_Week, aes( y=Point_est, colour = Var))+
geom_point(aes(x=Var))+
geom_errorbar(aes(x=Var, ymax = upper, ymin = lower))+
facet_wrap(vars(Model), ncol = 2)+
labs(title = "Coefficients and 95% CI in each categorical variable: Models with random effect of Sleeper and week",
x = "Point estimates")+
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.text.x = element_text(angle = 90, hjust =0.95, vjust = 0.2))
ggplot(Rand_Sleeper_Week, aes( y=Point_est, colour = Var))+
geom_point(aes(x=Var))+
geom_errorbar(aes(x=Var, ymax = upper, ymin = lower))+
facet_wrap(vars(Model), ncol = 2)+
labs(title = "Coefficients and 95% CI in each categorical variable: Models with random effect of Sleeper and week",
y = "Point estimates", x = "Variable")+
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.text.x = element_text(angle = 90, hjust =0.95, vjust = 0.2))
ggsave("Coefficients of models with random effect of Sleeper and Week.jpeg", device = 'jpeg')
ggsave("Coefficients of models with random effect of Sleeper and Week.jpeg", device = 'jpeg',
height = 8.42, width = 15)
ggplot(pred_p, aes(x = True.Value, y=Predicted.value))+
geom_point(color = 'steelblue') + facet_wrap(~Model) +
geom_smooth(formula = y~ x, method = "lm", se = FALSE, color = 'orange') +
stat_poly_eq(formula = y ~x,
aes(label = paste(..eq.label.., ..rr.label.., sep = "~~~")),
parse = TRUE, color = 'orange')+
geom_abline(slope = 1, intercept = 0, linetype = 2, size = 1)+
labs(title = "Predicted number of mosquitoes and the best fit line from models with random effect of Sleeper",
y = "Point estimates", x = "Variable")+
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.text.x = element_text(angle = 90, hjust =0.95, vjust = 0.2))
ggplot(Rand_Sleeper_Week, aes( y=Point_est, colour = Var))+
geom_point(aes(x=Var))+
geom_errorbar(aes(x=Var, ymax = upper, ymin = lower))+
facet_wrap(vars(Model), ncol = 2)+
labs(title = "Coefficients and 95% CI in each categorical variable: Models with random effect of Sleeper and week",
y = "Point estimates", x = "Variable")+
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.text.x = element_text(angle = 90, hjust =0.95, vjust = 0.2))
ggsave("Coefficients of models with random effect of Sleeper,jpeg", device = 'jpeg',
height = 8.42, width = 15)
ggsave("Coefficients of models with random effect of Sleeper.jpeg", device = 'jpeg',
height = 8.42, width = 15)
ggplot(Rand_Sleeper, aes( y=Point_est, colour = Var))+
geom_point(aes(x=Var))+
geom_errorbar(aes(x=Var, ymax = upper, ymin = lower))+
facet_wrap(vars(Model), ncol = 2)+
labs(title = "Coefficients and 95% CI in each categorical variable: Models with random effect of Sleeper",
y = "Point estimates", x = "Variable")+
theme(plot.title = element_text(hjust = 0.5, size = 15),
axis.text.x = element_text(angle = 90, hjust =0.95, vjust = 0.2))
ggsave("Coefficients of models with random effect of Sleeper.jpeg", device = 'jpeg',
height = 8.42, width = 15)
###Adding individual random effect to model 1
m_mos <- as_tibble(Tengrela_R1A_rm)%>%
dplyr::select(starts_with(c("Date","Total","Treatment", "marker","Hut","Sleeper")))
View(m_mos)
m_mos <- as_tibble(Tengrela_R1A_rm)%>%
dplyr::select(starts_with(c("Date","Total","Treatment", "marker","Hut","Sleeper","Dead", "Alive","dead")))
View(m_mos)
###Plot of the entire dataset
ggplot(n_mos, aes(x = Date, y = Total))+
geom_col(fill = 'Orange')+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1.5),
plot.title = element_text(hjust = 0.5, size = 15))+
labs(title = 'Number of mosquitoes per night')+
scale_x_date(date_breaks = "1 week")
####glmms
library(lme4)
library(tidyverse)
library(DHARMa)
library(lubridate)
library(MASS)
library(merTools)
library(ggpubr)
library(ggpmisc)
###Plot by Treatment
ggplot(n_mos, aes(x = Date, y = Count))+
geom_col(aes(fill = Location))+
facet_wrap(vars(Treatment), ncol = 2)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1.5),
plot.title = element_text(hjust = 0.5, size = 15))+
labs(title = 'Number of mosquitoes per night by Treatment')+
scale_x_date(date_breaks = "1 week")
ggsave("Frequency plot of the number of mosquitoes.jpeg")
ggplot(n_mos, aes(x = Total))+
geom_histogram(aes(fill = Treatment), binwidth = 1, center = 0)+
facet_wrap(vars(Treatment), ncol = 2)+
theme(plot.title = element_text(hjust = 0.5, size = 12))+
labs(title = 'Number of mosquitoes per night by Treatment')+
scale_x_continuous(breaks = seq(0, maxTotal, 10))
ggplot(n_mos, aes(x = Count))+
geom_histogram(aes(fill = WashedStatus), binwidth = 1, center = 0)+
facet_wrap(vars(WashedStatus))+
theme(plot.title = element_text(hjust = 0.5, size = 12))+
labs(title = 'Number of mosquitoes per night by WashedStatus')+
scale_x_continuous(breaks = seq(0, maxCount, 10))
ggplot(n_mos, aes(x = Total))+
geom_histogram(aes(fill = Treatment), binwidth = 1, center = 0)+
facet_wrap(vars(Treatment), ncol = 2)+
theme(plot.title = element_text(hjust = 0.5, size = 12))+
labs(title = 'Number of mosquitoes per night by Treatment')+
scale_x_continuous(breaks = seq(0, maxTotal, 10))
ggsave("Histogram of the number of mosquitoes by Treatment.jpeg")
ggplot(n_mos, aes(x = Count))+
geom_histogram(aes(fill = WashedStatus), binwidth = 1, center = 0)+
facet_wrap(vars(WashedStatus))+
theme(plot.title = element_text(hjust = 0.5, size = 12))+
labs(title = 'Number of mosquitoes per night by WashedStatus')+
scale_x_continuous(breaks = seq(0, maxCount, 10))
ggsave("Histogram of the number of mosquitoes by Location.jpeg")
ggplot(n_mos, aes(x = Total))+
geom_histogram(aes(fill = Treatment), binwidth = 1, center = 0)+
facet_wrap(vars(Treatment), ncol = 2)+
theme(plot.title = element_text(hjust = 0.5, size = 12))+
labs(title = 'Number of mosquitoes per night by Treatment')+
scale_x_continuous(breaks = seq(0, maxTotal, 10))
ggsave("Histogram of the number of mosquitoes by Treatment.jpeg",
width = 10, height = 7.5)
ggsave("Histogram of the number of mosquitoes by Treatment.jpeg",
width = 10, height = 6)
ggsave("Histogram of the number of mosquitoes by Treatment.jpeg",
width = 8, height = 6)
ggplot(n_mos, aes(x = Count))+
geom_histogram(aes(fill = WashedStatus), binwidth = 1, center = 0)+
facet_wrap(vars(WashedStatus))+
theme(plot.title = element_text(hjust = 0.5, size = 12))+
labs(title = 'Number of mosquitoes per night by WashedStatus')+
scale_x_continuous(breaks = seq(0, maxCount, 10))
ggsave("Histogram of the number of mosquitoes by Location.jpeg",
width = 8, height = 6)
ggsave("Histogram of the number of mosquitoes by Location.jpeg",
width = 8, height = 4)
ggplot(n_mos, aes(x = Count))+
geom_histogram(aes(fill = Location), binwidth = 1, center = 0)+
facet_wrap(vars(Location))+
theme(plot.title = element_text(hjust = 0.5, size = 12))+
labs(title = 'Number of mosquitoes per night by Location')+
scale_x_continuous(breaks = seq(0, maxCount, 10))
ggsave("Histogram of the number of mosquitoes by Location.jpeg",
width = 8, height = 4)
m_mos <- as_tibble(Tengrela_R1A_rm)%>%
dplyr::select(starts_with(c("Date","Total","Treatment", "marker","Hut","Sleeper","Dead", "Alive","dead")))
View(m_mos)
View(m_mos)
