k <- k+1
}
}
out <- out %>%
mutate(Nets = case_when(Treatment == "IG2.unwash" ~ "IG2",
Treatment == "P3.unwash" ~ "P3",
Treatment == "P2.unwash" ~ "P2",
Treatment == "IG2.wash" ~ "IG2",
Treatment == "P3.wash" ~ "P3",
Treatment == "UTN" ~ "UTN")))
return(out)
}
mor_pred_conf_int <- plot_mor(model = mor_3_1_mix, data = mor_reg)
ggplot(mor_pred_conf_int, aes(y = Treatment, x = mean,colour = Nets))+
geom_point()+
geom_errorbarh(aes(xmin = lwr, xmax = upr))+
facet_wrap(vars(Location), ncol = 1)
plot_mor <- function(model, data){
out <- data.frame(Location = character(),
Treatment = character(),
mean = integer(),
lwr = integer(),
upr = integer())
rand_eff <- unique(data.frame(marker = data$marker,
Hut = data$Hut))
Loc_levels <- levels(data$Location)
n_Loc <- length(Loc_levels)
Treatment_levels <- levels(data$Treatment)
n_Treat <- length(Treatment_levels)
k = 1
for (i in 1:n_Loc){
for (j in 1: n_Treat){
test <- predict(model, data.frame(marker = rand_eff[,1],
Hut = rand_eff[,2],
Location = rep(Loc_levels[i],215),
Treatment = rep(Treatment_levels[j],215)),
type = "link", re.form = NULL)
mean.test <- mean(test)
sd.test <- sqrt(var(test))
xmin <- invlogit(mean.test - 1.96 * sd.test)
xmax <- invlogit(mean.test + 1.96 * sd.test)
xmean <- invlogit(mean.test)
out[k, "Location"] <- Loc_levels[i]
out[k, "Treatment"] <- Treatment_levels[j]
out[k, "mean"] <- xmean
out[k, "lwr"] <- xmin
out[k, "upr"] <- xmax
k <- k+1
}
}
out <- out %>%
mutate(Nets = case_when(Treatment == "IG2.unwash" ~ "IG2",
Treatment == "P3.unwash" ~ "P3",
Treatment == "P2.unwash" ~ "P2",
Treatment == "IG2.wash" ~ "IG2",
Treatment == "P3.wash" ~ "P3",
Treatment == "UTN" ~ "UTN"))
return(out)
}
mor_pred_conf_int <- plot_mor(model = mor_3_1_mix, data = mor_reg)
ggplot(mor_pred_conf_int, aes(y = Treatment, x = mean,colour = Nets))+
geom_point()+
geom_errorbarh(aes(xmin = lwr, xmax = upr))+
facet_wrap(vars(Location), ncol = 1)
ggplot(m_mos, aes(y = Mortality, x=Village, color = Nets))+
geom_boxplot()+
stat_summary(aes(fill = Nets), fun = mean, geom="point", shape=16, size=6, alpha = 0.7) +
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality by location and treatment")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggplot(m_mos, aes(y = Mortality, x=Treatment, color = Nets))+
geom_boxplot()+
stat_summary(aes(fill = Nets), fun = mean, geom="point", shape=16, size=6, alpha = 0.7) +
facet_wrap(vars(Location), ncol = 1)+
labs(title = "Mortality by location and treatment")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggplot(m_mos, aes(y = Mortality, x=Treatment, color = Nets))+
geom_boxplot()+
stat_summary(aes(fill = Nets), fun = mean, geom="point", shape=16, size=6, alpha = 0.7) +
facet_wrap(vars(Location), ncol = 1)+
labs(title = "Mortality by location and treatment")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
geom_point(mor_pred_conf_int, aes(y = mean, x = Treatment))+
geom_errorbar(mor_pred_conf_int, aes(y = mean, x = Treatment, ymin = lwr, ymax = upr))
ggplot(m_mos, aes(y = Mortality, x=Treatment, color = Nets))+
geom_boxplot()+
stat_summary(aes(fill = Nets), fun = mean, geom="point", shape=16, size=6, alpha = 0.7) +
facet_wrap(vars(Location), ncol = 1)+
labs(title = "Mortality by location and treatment")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
geom_errorbar(mor_pred_conf_int, aes(y = mean, x = Treatment, ymin = lwr, ymax = upr))
ggplot(m_mos, aes(y = Mortality, x=Treatment, color = Nets))+
geom_boxplot(aes(y = Mortality, x=Treatment))+
stat_summary(aes(fill = Nets), fun = mean, geom="point", shape=16, size=6, alpha = 0.7) +
facet_wrap(vars(Location), ncol = 1)+
labs(title = "Mortality by location and treatment")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
geom_errorbar(mor_pred_conf_int, aes(y = mean, x = Treatment, ymin = lwr, ymax = upr))
ggplot(m_mos, aes(y = Mortality, x=Treatment, color = Nets))+
geom_boxplot(aes(y = Mortality, x=Treatment))+
stat_summary(aes(fill = Nets), fun = mean, geom="point", shape=16, size=6, alpha = 0.7) +
facet_wrap(vars(Location), ncol = 1)+
labs(title = "Mortality by location and treatment")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())
ggplot(m_mos, aes(color = Nets))+
geom_boxplot(aes(y = Mortality, x=Treatment))+
stat_summary(aes(fill = Nets), fun = mean, geom="point", shape=16, size=6, alpha = 0.7) +
facet_wrap(vars(Location), ncol = 1)+
labs(title = "Mortality by location and treatment")+
theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
geom_errorbar(mor_pred_conf_int, aes(y = mean, x = Treatment, ymin = lwr, ymax = upr))
ggplot(mor_pred_conf_int, aes(y = mean, x = Treatment,colour = Nets))+
geom_point(mor_pred_conf_int, aes(y = mean, x = Treatment))+
geom_errorbar(mor_pred_conf_int, aes(y = mean, x = Treatment, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)
ggplot(mor_pred_conf_int, aes(y = mean, x = Treatment,colour = Nets))+
geom_point(aes(y = mean, x = Treatment))+
geom_errorbar(aes(y = mean, x = Treatment, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)
tm_data <- mor_reg %>%
select(Location == Loc_levels[1] & Treatment == Treatment_levels[1])
tm_data <- mor_reg %>%
subset(Location == Loc_levels[1] & Treatment == Treatment_levels[1])
tm_data
tm <- sum(tm_data[,"Dead"])/nrow(tm_data)
tm
plot_mor <- function(model, data){
out <- data.frame(Location = character(),
Treatment = character(),
mean = integer(),
lwr = integer(),
upr = integer(),
True.mean = interger())
rand_eff <- unique(data.frame(marker = data$marker,
Hut = data$Hut))
Loc_levels <- levels(data$Location)
n_Loc <- length(Loc_levels)
Treatment_levels <- levels(data$Treatment)
n_Treat <- length(Treatment_levels)
k = 1
for (i in 1:n_Loc){
for (j in 1: n_Treat){
test <- predict(model, data.frame(marker = rand_eff[,1],
Hut = rand_eff[,2],
Location = rep(Loc_levels[i],215),
Treatment = rep(Treatment_levels[j],215)),
type = "link", re.form = NULL)
mean.test <- mean(test)
sd.test <- sqrt(var(test))
xmin <- invlogit(mean.test - 1.96 * sd.test)
xmax <- invlogit(mean.test + 1.96 * sd.test)
xmean <- invlogit(mean.test)
tm_data <- data %>%
subset(Location == Loc_levels[i] & Treatment == Treatment_levels[j])
tm <- sum(tm_data[,"Dead"])/nrow(tm_data)
out[k, "Location"] <- Loc_levels[i]
out[k, "Treatment"] <- Treatment_levels[j]
out[k, "mean"] <- xmean
out[k, "lwr"] <- xmin
out[k, "upr"] <- xmax
out[k, "True.mean"] <- tm
k <- k+1
}
}
out <- out %>%
mutate(Nets = case_when(Treatment == "IG2.unwash" ~ "IG2",
Treatment == "P3.unwash" ~ "P3",
Treatment == "P2.unwash" ~ "P2",
Treatment == "IG2.wash" ~ "IG2",
Treatment == "P3.wash" ~ "P3",
Treatment == "UTN" ~ "UTN"))
return(out)
}
mor_pred_conf_int <- plot_mor(model = mor_3_1_mix, data = mor_reg)
plot_mor <- function(model, data){
out <- data.frame(Location = character(),
Treatment = character(),
mean = integer(),
lwr = integer(),
upr = integer(),
True.mean = integer())
rand_eff <- unique(data.frame(marker = data$marker,
Hut = data$Hut))
Loc_levels <- levels(data$Location)
n_Loc <- length(Loc_levels)
Treatment_levels <- levels(data$Treatment)
n_Treat <- length(Treatment_levels)
k = 1
for (i in 1:n_Loc){
for (j in 1: n_Treat){
test <- predict(model, data.frame(marker = rand_eff[,1],
Hut = rand_eff[,2],
Location = rep(Loc_levels[i],215),
Treatment = rep(Treatment_levels[j],215)),
type = "link", re.form = NULL)
mean.test <- mean(test)
sd.test <- sqrt(var(test))
xmin <- invlogit(mean.test - 1.96 * sd.test)
xmax <- invlogit(mean.test + 1.96 * sd.test)
xmean <- invlogit(mean.test)
tm_data <- data %>%
subset(Location == Loc_levels[i] & Treatment == Treatment_levels[j])
tm <- sum(tm_data[,"Dead"])/nrow(tm_data)
out[k, "Location"] <- Loc_levels[i]
out[k, "Treatment"] <- Treatment_levels[j]
out[k, "mean"] <- xmean
out[k, "lwr"] <- xmin
out[k, "upr"] <- xmax
out[k, "True.mean"] <- tm
k <- k+1
}
}
out <- out %>%
mutate(Nets = case_when(Treatment == "IG2.unwash" ~ "IG2",
Treatment == "P3.unwash" ~ "P3",
Treatment == "P2.unwash" ~ "P2",
Treatment == "IG2.wash" ~ "IG2",
Treatment == "P3.wash" ~ "P3",
Treatment == "UTN" ~ "UTN"))
return(out)
}
mor_pred_conf_int <- plot_mor(model = mor_3_1_mix, data = mor_reg)
ggplot(mor_pred_conf_int, aes(y = mean, x = Treatment,colour = Nets))+
geom_point(aes(y = mean, x = Treatment))+
geom_errorbar(aes(y = mean, x = Treatment, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)
View(mor_pred_conf_int)
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean), size = 15, shape = 23)
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 10, shape = 23)
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 18, shape = 23, alpha = 0.5)
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 8, shape = 23, alpha = 0.5)
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 8, shape = 23, alpha = 0.5)+
geom_boxplot(m_mos, aes(y = Mortality, x=Treatment))
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 8, shape = 23, alpha = 0.5)+
geom_boxplot(m_mos, aes(y = Mortality))
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 8, shape = 23, alpha = 0.5)+
geom_boxplot(m_mos, aes(y = Mortality))+
labs(title = "Best fitted model predicted mortality")
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 8, shape = 23, alpha = 0.5)+
labs(title = "Best fitted model predicted mortality")
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 8, shape = 23, alpha = 0.5)+
labs(title = "Best fitted model predicted mortality")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Best fitted model predicted mortality.jpeg", device = "jpeg")
ggsave("Best fitted model predicted mortality.jpeg", device = "jpeg",
height = 7, width = 5)
ggsave("Best fitted model predicted mortality.jpeg", device = "jpeg",
height = 4, width = 5)
ggsave("Best fitted model predicted mortality.jpeg", device = "jpeg",
height = 7, width = 8)
ggsave("Best fitted model predicted mortality.jpeg", device = "jpeg",
height = 7, width = 7)
ggsave("Best fitted model predicted mortality.jpeg", device = "jpeg",
height = 6, width = 7)
ggplot(mor_pred_conf_int, aes(x = Treatment,colour = Nets))+
geom_point(aes(y = mean))+
geom_errorbar(aes(y = mean, ymin = lwr, ymax = upr))+
facet_wrap(vars(Location), ncol = 1)+
geom_point(aes(y=True.mean, fill = Nets), size = 8, shape = 23, alpha = 0.5)+
labs(title = "Best fitted model predicted mortality", y = "Mortality")+
theme(plot.title = element_text(hjust = 0.5))
View(bf_reg)
bf_0 <- glm(Fed~1, data = bf_reg, family =  binomial("log"))
summary(bf_0)
bf_1_1 <- glm(Fed~Location, data = bf_reg, family =  binomial("log"))
summary(bf_1_1)
###One variable model
bf_1_1 <- glm(Fed~Location, data = bf_reg, family =  binomial("log"))
bf_reg$Location <- as.factor(bf_reg$Location)
###One variable model
bf_1_1 <- glm(Fed~Location, data = bf_reg, family =  binomial("log"))
class(bf_reg$Location)
bf_reg$Location <- as.character(bf_reg$Location)
levels()bf_reg$Location
levels(bf_reg$Location)
bf_reg$Location <- as.factor(bf_reg$Location)
###One variable model
bf_1_1 <- glm(Fed~Location, data = bf_reg, family =  binomial("log"))
####Model 1: Location
mor_1_1 <- glm(Dead~Location, data = mor_reg, family = binomial("logit"))
bf_1_1 <- glm(Fed~Insecticide, data = bf_reg, family =  binomial("log"))
levels(bf_reg$Location)
summary(bf_1_2)
bf_1_2 <- glm(Fed~Insecticide, data = bf_reg, family =  binomial("log"))
summary(bf_1_2)
bf_1_4 <- glm(Fed~Insecticide, data = bf_reg, family =  binomial("log"))
summary(bf_1_4)
#AIC: 5306.3
bf_1_3 <- glm(Fed~WashedStatus, data = bf_reg, family =  binomial("log"))
summary(bf_1_3)
bf_1_3 <- glm(Fed~Treatment, data = bf_reg, family =  binomial("log"))
summary(bf_1_3)
###One variable model
bf_1_1 <- glm(Fed~Location, data = bf_reg, family =  binomial("logit"))
summary(bf_1_1)
bf_1_4 <- glm(Fed~Insecticide, data = bf_reg, family =  binomial("logit"))
summary(bf_1_4)
bf_1_3 <- glm(Fed~Treatment, data = bf_reg, family =  binomial("logit"))
summary(bf_1_3)
summary(bf_1_1)
bf_1_5 <- glm(Fed~Nets, data = bf_reg, family =  binomial("logit"))
summary(bf_1_5)
###One variable model with random effect
bf_1_1_obs <- glmer(Fed~Location + (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_1_1_obs)
bf_1_2_obs <- glmer(Fed~WashedStatus+ (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_1_2_obs)
#AIC: 5306.7
bf_1_3_obs <- glmer(Fed~Treatment+ (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_1_3_obs)
bf_1_4_obs <- glmer(Fed~Insecticide+ (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_1_4_obs)
bf_1_5_obs <- glmer(Fed~Nets+ (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_1_5_obs)
bf_1_1_hut <- glmer(Fed~Location + (1|Hut), data = bf_reg, family =  binomial("logit"))
summary(bf_1_1_hut)
bf_1_2_hut <- glmer(Fed~WashedStatus+ (1|Hut), data = bf_reg, family =  binomial("logit"))
summary(bf_1_2_hut)
#AIC: 4080.6
bf_1_3_hut <- glmer(Fed~Treatment+ (1|Hut), data = bf_reg, family =  binomial("logit"))
summary(bf_1_3_hut)
#AIC: 4079.6
bf_1_4_hut <- glmer(Fed~Insecticide+ (1|Hut), data = bf_reg, family =  binomial("logit"))
summary(bf_1_4_hut)
#AIC: 4080.5
bf_1_5_hut <- glmer(Fed~Nets+ (1|Hut), data = bf_reg, family =  binomial("logit"))
summary(bf_1_5_hut)
anova(bf_1_1_hut,bf_1_2_hut)
anova(bf_1_1_hut,bf_1_2_hut,bf_1_3_hut, bf_1_4_hut,bf_1_5_hut)
summary(bf_1_1_hut)
summary(bf_1_2_hut)
summary(bf_1_3_hut)
summary(bf_1_4_hut)
summary(bf_1_5_hut)
summary(bf_1_5_hut)
summary(bf_1_4_hut)
summary(bf_1_3_hut)
summary(bf_1_2_hut)
summary(bf_1_3_hut)
summary(bf_1_4_hut)
summary(bf_1_5_hut)
summary(bf_1_2_obs)
summary(bf_1_3_obs)
summary(bf_1_4_obs)
summary(bf_1_5_obs)
anova(bf_1_1_hut,bf_1_2_hut,bf_1_3_hut, bf_1_4_hut,bf_1_5_hut)
bf_2_1 <- glm(Fed~Location + Treatment, data = bf_reg, family =  binomial("logit"))
summary(bf_2_1)
bf_2_2 <- glm(Fed~Location +WashedStatus, data = bf_reg, family =  binomial("logit"))
summary(bf_2_2)
bf_2_3 <- glm(Fed~Location +Insecticide, data = bf_reg, family =  binomial("logit"))
summary(bf_2_3)
bf_2_4 <- glm(Fed~Location +Nets, data = bf_reg, family =  binomial("logit"))
summary(bf_2_4)
bf_2_1_int <- glm(Fed~Location + Treatment+Location * Treatment, data = bf_reg, family =  binomial("logit"))
summary(bf_2_1_int)
#AIC: 3800.7
bf_2_2_int <- glm(Fed~Location +WashedStatus + Location *WashedStatus, data = bf_reg, family =  binomial("logit"))
summary(bf_2_2_int)
bf_2_3_int <- glm(Fed~Location +Insecticide +Location*Insecticide, data = bf_reg, family =  binomial("logit"))
summary(bf_2_3_int)
bf_2_4_int <- glm(Fed~Location +Nets + Location*Nets, data = bf_reg, family =  binomial("logit"))
summary(bf_2_4_int)
bf_2_1_int_obs <- glm(Fed~Location + Treatment+Location * Treatment + (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_2_1_int_obs)
bf_2_1_int_obs <- glmer(Fed~Location + Treatment+Location * Treatment + (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_2_1_int_obs)
bf_2_1_obs <- glmer(Fed~Location + Treatment + (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_2_1_obs)
bf_2_1_obs <- update(bf_2_1_obs, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_1_obs)
bf_2_2_obs <- glmer(Fed~Location +WashedStatus + (1|marker), data = bf_reg, family =  binomial("logit"))
bf_2_2_obs <- update(bf_2_2_obs, control = glmerControl(optimizer = "bobyqa"))
bf_2_2_obs <- glmer(Fed~Location +WashedStatus + (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_2_2_obs)
bf_2_3_obs <- glmer(Fed~Location +Insecticide + (1|marker), data = bf_reg, family =  binomial("logit"))
bf_2_3_obs <- update(bf_2_3_obs, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_3_obs)
bf_2_3_obs <- glmer(Fed~Location +Insecticide + (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_2_3_obs)
bf_2_4_obs <- glmer(Fed~Location +Nets + (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_2_4_obs)
###Two variable model with observational random effect
bf_2_1_obs <- glmer(Fed~Location + Treatment + (1|marker), data = bf_reg, family =  binomial("logit"))
bf_2_1_obs <- update(bf_2_1_obs, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_1_obs)
#AIC: 3822.1
anova(bf_2_1_int,bf_2_2_int,bf_2_3_int,bf_2_4_int)
###Two variable model with interaction and observational random effect
bf_2_1_int_obs <- glmer(Fed~Location + Treatment+Location * Treatment + (1|marker), data = bf_reg, family =  binomial("logit"))
bf_2_1_obs <- update(bf_2_1_obs, control = glmerControl(optimizer = "bobyqa"))
bf_2_1_int_obs <- update(bf_2_1_int_obs, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_1_int_obs)
bf_2_2_int_obs <- glmer(Fed~Location +WashedStatus + Location *WashedStatus+ (1|marker), data = bf_reg, family =  binomial("logit"))
bf_2_1_obs <- update(bf_2_1_obs, control = glmerControl(optimizer = "bobyqa"))
bf_2_2_int_obs <- update(bf_2_2_int_obs, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_2_int_obs)
bf_2_3_int_obs <- glmer(Fed~Location +Insecticide +Location*Insecticide+ (1|marker), data = bf_reg, family =  binomial("logit"))
bf_2_3_int_obs <- update(bf_2_3_int_obs, control = glmerControl(optimizer = "bobyqa"))
bf_2_3_int_obs <- glmer(Fed~Location +Insecticide +Location*Insecticide+ (1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_2_3_int_obs)
bf_2_4_int_obs <- glmer(Fed~Location +Nets + Location*Nets+ (1|marker), data = bf_reg, family =  binomial("logit"))
bf_2_4_int_obs <- update(bf_2_4_int_obs, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_4_int_obs)
summary(bf_2_1_int_obs)
summary(bf_2_2_int_obs)
summary(bf_2_3_int_obs)
summary(bf_2_4_int_obs)
###Two variable model with interaction and observational and hut random effect
bf_2_1_int_rand <- glmer(Fed~Location + Treatment+Location * Treatment + (1|marker) + (1|Hut),
data = bf_reg, family =  binomial("logit"))
bf_2_1_int_rand <- update(bf_2_1_int_rand, control = glmerControl(optimizer = "bobyqa"))
bf_2_2_int_obs <- update(bf_2_2_int_obs, control = glmerControl(optimizer = "bobyqa"))
bf_2_2_int_obs <- glmer(Fed~Location +WashedStatus + Location *WashedStatus+ (1|marker), data = bf_reg, family =  binomial("logit"))
bf_2_2_int_obs <- update(bf_2_2_int_obs, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_2_int_obs)
bf_2_2_int_rand <- glmer(Fed~Location +WashedStatus + Location *WashedStatus+ (1|marker)+ (1|Hut),
data = bf_reg, family =  binomial("logit"))
bf_2_2_int_obs <- update(bf_2_2_int_obs, control = glmerControl(optimizer = "bobyqa"))
bf_2_1_int_rand <- update(bf_2_1_int_rand, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_2_int_obs)
bf_2_2_int_rand <- update(bf_2_2_int_rand, control = glmerControl(optimizer = "bobyqa"))
?isSingular
summary(bf_2_1_int_rand)
summary(bf_2_2_int_rand)
bf_2_3_int_rand <- glmer(Fed~Location +Insecticide +Location*Insecticide+ (1|marker) + (1|Hut),
data = bf_reg, family =  binomial("logit"))
bf_2_3_int_rand <- update(bf_2_3_int_rand, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_3_int_rand)
bf_2_4_int_rand <- glmer(Fed~Location +Nets + Location*Nets+ (1|marker) + (1|Hut),
data = bf_reg, family =  binomial("logit"))
bf_2_4_int_rand <- update(bf_2_4_int_rand, control = glmerControl(optimizer = "bobyqa"))
summary(bf_2_4_int_obs)
summary(bf_2_4_int_rand)
2.256e+00
summary(bf_2_1_obs)
summary(bf_2_2_obs)
summary(bf_2_3_obs)
summary(bf_2_4_obs)
summary(bf_2_1_int_obs)
summary(bf_2_2_int_obs)
summary(bf_2_3_int_obs)
summary(bf_2_4_int_obs)
bf_0_obs <- glmer(Fed ~1+(1|marker), data = bf_reg, family =  binomial("log"))
###Intercept only model
bf_0 <- glm(Fed~1, data = bf_reg, family =  binomial("logit"))
bf_0_obs <- glmer(Fed ~1+(1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_0)
bf_0_obs <- glmer(Fed ~1+(1|marker), data = bf_reg, family =  binomial("logit"))
summary(bf_0_obs)
bf_0_hut <- glmer(Fed ~1+(1|Hut), data = bf_reg, family =  binomial("logit"))
summary(bf_0_hut)
bf_0_rand <- glmer(Fed ~1+(1|marker)+(1|Hut), data = bf_reg, family =  binomial("logit"))
summary(bf_0_obs)
summary(bf_0_rand)
