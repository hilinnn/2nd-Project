geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), fill = 'red', size = 3)+
labs(title = "Best model estimates vs read data plot : Treatment + Location + Treatment * Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 17, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
help("ggsave")
ggsave("Best model estimates vs read data plot : Treatment + Location + Treatment x Location.jpeg",
device = "jpeg")
ggsave("Best model estimates vs read data plot : Treatment + Location + Treatment x Location.jpeg",
device = "jpeg", width = 11, height = 9)
ggsave("Best model estimates vs read data plot : Treatment + Location + Treatment x Location.jpeg",
device = "jpeg", width = 12, height = 9)
View(n_mos)
View(n_mos)
model_1_5 <- glm.nb(formula = Count~Nets, data = n_mos)
summary(model_1_5)
####Data to model for variables other than Location
n_mos_wt_Loc <- n_mos %>%
distinct(Date,Treatment,Total, .keep_all = TRUE)
View(n_mos_wt_Loc)
model_1_2 <- glm.nb(formula = Total~WashedStatus, data = n_mos_wt_Loc)
summary(model_1_2)
model_1_3 <- glm.nb(formula = Total~Treatment, data = n_mos_wt_Loc)
summary(model_1_3)
model_1_4 <- glm.nb(formula = Total~Insecticide, data = n_mos_wt_Loc)
summary(model_1_4)
model_1_5 <- glm.nb(formula = Total~Nets, data = n_mos_wt_Loc)
summary(model_1_5)
#####Boxplot: 6 vs 4
ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(y=Treatment))+
geom_boxplot(aes(y=Nets))
View(n_mos_wt_Loc)
#####Boxplot: 6 vs 4
ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(y=Treatment))
#####Boxplot: 6 vs 4
ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment))+
geom_boxplot(aes(x=Nets))
#####Boxplot: 6 vs 4
ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment))
ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Nets))
#####Boxplot: 6 vs 4
ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment))+
ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Nets))
#####Boxplot: 6 vs 4
a <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment))+
labs(title = "Boxplot of number of mosquitoes by different ITNs")
b <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Nets))+
labs(title = "Boxplot of number of mosquitoes by types of Nets")
a+b
model_2_1 <- glm.nb(formula = Count~Location + WashedStatus, data = n_mos)
library(patchwork)
a+b
b <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Nets))+
labs(title = "Boxplot of number of mosquitoes by types of Nets")+
theme(plot.title = element_text(size = 12, hjust = 0.5))
#####Boxplot: 6 vs 4
a <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment))+
labs(title = "Boxplot of number of mosquitoes by different ITNs")+
theme(plot.title = element_text(size = 12, hjust = 0.5))
a+b
#####Boxplot: 6 vs 4
a <- ggplot(n_mos_wt_Loc, aes(y=Total, fill = Nets))+
geom_boxplot(aes(x=Treatment))+
labs(title = "Boxplot of number of mosquitoes by different ITNs")+
theme(plot.title = element_text(size = 12, hjust = 0.5))
b <- ggplot(n_mos_wt_Loc, aes(y=Total, fill = Nets))+
geom_boxplot(aes(x=Nets))+
labs(title = "Boxplot of number of mosquitoes by types of Nets")+
theme(plot.title = element_text(size = 12, hjust = 0.5))
a+b
ggsave("Number of mosquitoes found in the hut by different treatment/nets.jpeg", device = "jpeg")
ggsave("Number of mosquitoes found in the hut by different treatment or nets.jpeg", device = "jpeg")
b <- ggplot(n_mos_wt_Loc, aes(y=Total, fill = Nets))+
geom_boxplot(aes(x=Nets))+
labs(title = "Boxplot of number of mosquitoes by types of Nets")+
theme(plot.title = element_text(size = 12, hjust = 0.5))
#####Boxplot: 6 vs 4
a <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment, fill = Nets))+
labs(title = "Boxplot of number of mosquitoes by different ITNs")+
theme(plot.title = element_text(size = 12, hjust = 0.5))
a
#####Boxplot: 6 vs 4
a <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment), fill = Nets)+
labs(title = "Boxplot of number of mosquitoes by different ITNs")+
theme(plot.title = element_text(size = 12, hjust = 0.5))
#####Boxplot: 6 vs 4
a <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment, fill = Nets))+
labs(title = "Boxplot of number of mosquitoes by different ITNs")+
theme(plot.title = element_text(size = 12, hjust = 0.5),
legeng.position = "none")
a
#####Boxplot: 6 vs 4
a <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment, fill = Nets))+
labs(title = "Boxplot of number of mosquitoes by different ITNs")+
theme(plot.title = element_text(size = 12, hjust = 0.5),
legend.position = "none")
a
a <- ggplot(n_mos_wt_Loc, aes(y=Total))+
geom_boxplot(aes(x=Treatment, fill = Nets))+
labs(title = "Boxplot of number of mosquitoes by different ITNs")+
theme(plot.title = element_text(size = 12, hjust = 0.5),
legend.position = "none")
b <- ggplot(n_mos_wt_Loc, aes(y=Total, fill = Nets))+
geom_boxplot(aes(x=Nets))+
labs(title = "Boxplot of number of mosquitoes by types of Nets")+
theme(plot.title = element_text(size = 12, hjust = 0.5))
a+b
ggsave("Number of mosquitoes found in the hut by different treatment or nets.jpeg", device = "jpeg")
ggsave("Number of mosquitoes found in the hut by different treatment or nets.jpeg",
device = "jpeg", width = 10, height = 9)
####glmms
library(lme4)
library(tidyverse)
library(DHARMa)
library(lubridate)
library(MASS)
library(merTools)
library(ggpubr)
library(ggpmisc)
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), fill = 'red', size = 3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
ggsave("Best model estimates and real data plot : Treatment + Location + Treatment x Location.jpeg",
device = "jpeg", width = 12, height = 9)
ggsave("Best model estimates and real data plot (Treatment and Location with interaction).jpeg",
device = "jpeg", width = 12, height = 9)
View(mor_reg)
model_1_5 <- glm.nb(formula = Total~Nets, data = n_mos)
summary(model_1_5)
model_1_5 <- glm.nb(formula = Count~Nets, data = n_mos)
summary(model_1_5)
####Model 0
mor_0 <- glm(Dead~1, data = mor_reg, family = binomial("log"))
summary(mor_0)
summary(4819.5)
plot(mor_0)
exp(-1.16)
sum(mor_reg$Dead)
nrow(mor_reg)
1215/3872
####Model 1
###Variables: Location and Treatment
mor_1 <- glm(Dead~Location, data = mor_reg, family = binomial("logit"))
summary(mor_1)
plot(mor_1)
help("pnorm")
View(mor_reg)
View(m_mos)
m_mos <- as_tibble(Tengrela_R1A_rm)%>%
mutate(Total.Mor = Dead.Tot/Total,
Room = Dead.Room/Total.Room,
Net = Dead.Net/Total.Net,
Veranda = Dead.Ver/Total.Ver)%>%
gather("Location", "Mortality", c("Room", "Net", "Veranda"))%>%
dplyr::select(starts_with(c("Village","Date","Treatment","Location", "Mortality",
"Total","Dead","dead","Hut","Sleeper","marker"))) %>%
mutate(WashedStatus = case_when( Treatment == "IG2.unwash" ~ "unwashed",
Treatment == "P3.unwash" ~ "unwashed",
Treatment == "P2.unwash" ~ "unwashed",
Treatment == "IG2.wash" ~ "washed",
Treatment == "P3.wash" ~ "washed",
Treatment == "UTN" ~ "UTN"),
Insecticide = case_when(Treatment == "IG2.unwash" ~ "alpha cypermethrin",
Treatment == "P3.unwash" ~ "deltamethrin",
Treatment == "P2.unwash" ~ "deltamethrin",
Treatment == "IG2.wash" ~ "alpha cypermethrin",
Treatment == "P3.wash" ~ "deltamethrin",
Treatment == "UTN" ~ "UTN"),
Week = ceiling((yday(Date) - min(yday(Date))+1)/7))
m_mos$Location <- as.factor(m_mos$Location)
head(m_mos)
View(m_mos)
m_mos <- as_tibble(Tengrela_R1A_rm)%>%
mutate(Total.Mor = Dead.Tot/Total,
Room = Dead.Room/Total.Room,
Net = Dead.Net/Total.Net,
Veranda = Dead.Ver/Total.Ver)%>%
gather("Location", "Mortality", c("Room", "Net", "Veranda"))%>%
dplyr::select(starts_with(c("Village","Date","Treatment","Location", "Mortality",
"Total","Dead","dead","Hut","Sleeper","marker"))) %>%
mutate(WashedStatus = case_when( Treatment == "IG2.unwash" ~ "unwashed",
Treatment == "P3.unwash" ~ "unwashed",
Treatment == "P2.unwash" ~ "unwashed",
Treatment == "IG2.wash" ~ "washed",
Treatment == "P3.wash" ~ "washed",
Treatment == "UTN" ~ "UTN"),
Insecticide = case_when(Treatment == "IG2.unwash" ~ "alpha cypermethrin",
Treatment == "P3.unwash" ~ "deltamethrin",
Treatment == "P2.unwash" ~ "deltamethrin",
Treatment == "IG2.wash" ~ "alpha cypermethrin",
Treatment == "P3.wash" ~ "deltamethrin",
Treatment == "UTN" ~ "UTN"),
Week = ceiling((yday(Date) - min(yday(Date))+1)/7),
Nets = case_when(Treatment == "IG2.unwash" ~ "IG2",
Treatment == "P3.unwash" ~ "P3",
Treatment == "P2.unwash" ~ "P2",
Treatment == "IG2.wash" ~ "IG2",
Treatment == "P3.wash" ~ "P3",
Treatment == "UTN" ~ "UTN"))
m_mos$Location <- as.factor(m_mos$Location)
head(m_mos)
View(m_mos)
source("~/Desktop/Second project/R/0610 loop.R")
###Generate the data used in the model fitting
mor_reg <- gen_mo(m_mos)
View(mor_reg)
levels(mor_reg$WashedStatus)
mor_reg$WashedStatus <- as.factor(mor_reg$WashedStatus)
mor_reg$Insecticide <- as.factor(mor_reg$Insecticide)
mor_reg$Nets <- as.factor(mor_reg$Nets)
levels(mor_reg$WashedStatus)
levels(mor_reg$Insecticide)
levels(mor_reg$Nets)
levels(mor_reg$Location)
mor_reg$Location <- as.factor(mor_reg$Location)
levels(mor_reg$Location)
install.library("foreign")
install.packages("foreign")
install.packages("nnet")
library(nnet)
source("~/Desktop/Second project/R/glmm_functions.R")
###Fitting multinomial model to test the impact of treatment to the location
multimod_Tr_Loc <- multinom(Location ~ Treatment, data = n_mos)
# weights:  21 (12 variable)
# initial  value 711.900763
# final  value 711.900763
# converged
summary(multimod_Tr_Loc)
z_multimod_Tr_Loc <- summary(multimod_Tr_Loc)$coefficients/summary(multimod_Tr_Loc)$standard.errors
z_multimod_Tr_Loc
p_multimod_Tr_Loc <- (1-pnorm(z_multimod_Tr_Loc,0,1))*2
p_multimod_Tr_Loc
###Fitting multinomial model to test the impact of treatment to the location
multimod_Tr_Loc <- multinom(Location ~ Treatment+Count, data = n_mos)
# # weights:  24 (14 variable)
# initial  value 711.900763
# iter  10 value 681.771404
# final  value 681.618250
# converged
summary(multimod_Tr_Loc)
z_multimod_Tr_Loc <- summary(multimod_Tr_Loc)$coefficients/summary(multimod_Tr_Loc)$standard.errors
p_multimod_Tr_Loc <- (1-pnorm(z_multimod_Tr_Loc,0,1))*2
p_multimod_Tr_Loc
p_multimod_Tr_Loc <- (1-pnorm(abs(z_multimod_Tr_Loc),0,1))*2
p_multimod_Tr_Loc
##Chagne the reference category
n_mos$Treatment <- relevel(n_mos$Treatment, ref = "UTN")
multimod_Tr_Loc <- multinom(Location ~ Treatment+Count, data = n_mos)
summary(multimod_Tr_Loc)
z_multimod_Tr_Loc <- summary(multimod_Tr_Loc)$coefficients/summary(multimod_Tr_Loc)$standard.errors
p_multimod_Tr_Loc <- (1-pnorm(abs(z_multimod_Tr_Loc),0,1))*2
p_multimod_Tr_Loc
multimod_Ne_Loc <- multinom(Location ~ Nets+Count, data = n_mos)
summary(multimod_Ne_Loc)
z_multimod_Ne_Loc <- summary(multimod_Ne_Loc)$coefficients/summary(multimod_Ne_Loc)$standard.errors
p_multimod_Ne_Loc <- (1-pnorm(abs(z_multimod_Ne_Loc),0,1))*2
p_multimod_Ne_Loc
summary(mor_1)
####Model 1: Location
mor_1_1 <- glm(Dead~Location, data = mor_reg, family = binomial("logit"))
rm(mor_1)
summary(mor_1_1)
####Model 2: Treatment
mor_1_2 <- glm(Dead~Treatment, data = mor_reg, family = binomial("logit"))
summary(mor_1_2)
####Model 2: Treatment
mor_1_2 <- glm(Dead~WashedStatus, data = mor_reg, family = binomial("logit"))
mor_1_3 <- glm(Dead~Treatment, data = mor_reg, family = binomial("logit"))
summary(mor_1_3)
summary(mor_1_2)
####Model 4: Insecticide
mor_1_4 <- glm(Dead~Insecticide, data = mor_reg, family = binomial("logit"))
summary(mor_1_4)
mor_1_5 <- glm(Dead~Nets, data = mor_reg, family = binomial("logit"))
summary(mor_1_5)
####Model 5: Nets
mor_1_5 <- glm(Dead~Nets, data = mor_reg, family = binomial("logit"))
summary(mor_1_5)
##AIC: 4689.6
mor_1_2 <- glm(Dead~WashedStatus, data = mor_reg, family = binomial("logit"))
summary(mor_1_2)
###Variables: Location and Treatment without interactions
mor_2_1 <- glm(Dead~Location+Treatment + Location*Treatment,
data = mor_reg, family = binomial("logit"))
summary(mor_2_1)
mor_2_1 <- glm(Dead~Location+Treatment,
data = mor_reg, family = binomial("logit"))
summary(mor_2_1)
mor_2_2 <- glm(Dead~Location+WashedStatus,
data = mor_reg, family = binomial("logit"))
summary(mor_2_2)
mor_2_3 <- glm(Dead~Location+Insecticide,
data = mor_reg, family = binomial("logit"))
summary(mor_2_3)
mor_2_4 <- glm(Dead~Location+Nets,
data = mor_reg, family = binomial("logit"))
summary(mor_2_4)
summary(multimod_Tr_Loc)
p_multimod_Tr_Loc <- (1-pnorm(abs(z_multimod_Tr_Loc),0,1))*2
p_multimod_Tr_Loc
multimod_Ne_Loc <- multinom(Location ~ Nets+Count, data = n_mos)
# # weights:  18 (10 variable)
# initial  value 711.900763
# iter  10 value 682.558178
# final  value 681.945688
# converged
summary(multimod_Ne_Loc)
z_multimod_Ne_Loc <- summary(multimod_Ne_Loc)$coefficients/summary(multimod_Ne_Loc)$standard.errors
p_multimod_Ne_Loc <- (1-pnorm(abs(z_multimod_Ne_Loc),0,1))*2
p_multimod_Ne_Loc
n_mos$Nets <- relevel(n_mos$Nets, ref = "UTN")
multimod_Ne_Loc <- multinom(Location ~ Nets+Count, data = n_mos)
# # weights:  18 (10 variable)
# initial  value 711.900763
# iter  10 value 682.558178
# final  value 681.945688
# converged
summary(multimod_Ne_Loc)
z_multimod_Ne_Loc <- summary(multimod_Ne_Loc)$coefficients/summary(multimod_Ne_Loc)$standard.errors
p_multimod_Ne_Loc <- (1-pnorm(abs(z_multimod_Ne_Loc),0,1))*2
p_multimod_Ne_Loc
mor_3_1 <- glm(Dead~Location+Treatment + Location*Treatmen,
data = mor_reg, family = binomial("logit"))
summary(mor_3_1)
mor_3_1 <- glm(Dead~Location+Treatment + Location*Treatment,
data = mor_reg, family = binomial("logit"))
summary(mor_3_1)
mor_2_q <- glm(Mortality~Location+Treatment + Location*Treatment,
data = m_mos, family = quasibinomial("logit"))
mor_3_2 <- glm(Dead~Location+WashedStatus + Location*WashedStatus,
data = mor_reg, family = binomial("logit"))
summary(mor_3_2)
mor_3_3 <- glm(Dead~Location+Insecticide + Location*Insecticide,
data = mor_reg, family = binomial("logit"))
summary(mor_3_3)
mor_3_4 <- glm(Dead~Location+Nets + Location*Nets,
data = mor_reg, family = binomial("logit"))
summary(mor_3_4)
###Mixed effect model
##Random effect: individual random effect (per hut per night)
mor_1_ran <- glmer(Dead~Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_ran)
View(mor_reg)
rm(mor_1_ran
)
mor_1_1_ran <- glmer(Dead~Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_1_ran)
mor_1_1_ran <- glm(Dead~Location  + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_1_ran)
mor_1_1_ran <- glmer(Dead~Location  + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_1_ran)
mor_1_2_ran <- glmer(Dead~WashedStatus+ (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_2_ran)
mor_1_3_ran <- glm(Dead~Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_3_ran)
mor_1_3_ran <- glmer(Dead~Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_3_ran)
mor_1_4_ran <- glmer(Dead~Insecticide + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_4_ran)
summary(mor_1_3_ran)
summary(mor_1_4_ran)
mor_1_5_ran <- glmer(Dead~Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_5_ran)
mor_1_5_ran <- glmer(Dead~Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_5_ran)
##AIC: 4147.3
##Variance of the random effect: 1.485
mor_1_1_ran <- glmer(Dead~Location  + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_1_1_ran)
summary(mor_1_3_ran)
mor_2_1_ran <- glmer(Dead~Location+Treatment + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_2_1_ran)
mor_2_2_ran <- glmer(Dead~Location+WashedStatus + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_2_2_ran)
mor_2_3_ran <- glmer(Dead~Location+Insecticide + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_2_3_ran)
mor_2_4_ran <- glmer(Dead~Location+Nets + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_2_4_ran)
mor_3_1_ran <- glmer(Dead~Location+Treatment + Location*Treatment +(1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_1_ran)
mor_3_2_ran <- glmer(Dead~Location+WashedStatus + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_2_ran)
##AIC: 4047.5
mor_3_2_ran <- glmer(Dead~Location+WashedStatus+Location*WashedStatus + (1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_2_ran)
mor_3_3_ran <- glmer(Dead~Location+Insecticide + Location*Insecticide +(1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_3_ran)
mor_3_4_ran <- glmer(Dead~Location+Nets + Location*Nets +(1|marker),
data = mor_reg, family = binomial("logit"))
summary(mor_3_4_ran)
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), fill = 'red', size = 3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
####glmms
library(lme4)
library(tidyverse)
library(DHARMa)
library(lubridate)
library(MASS)
library(merTools)
library(ggpubr)
library(ggpmisc)
library(nnet)
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), fill = 'red', size = 3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), color = 'red', size = 3)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), color = 'red', size = 3, shape = 23)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), color = 'red', fill = 'red', alpha=0.5, size = 2.5, shape = 23)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
###Plot the predicted values from the best model and the corresponding true values
ggplot(predxNet_W, aes(x = Category))+
geom_point(aes(y = True.value), color = 'steelblue')+
geom_boxplot(aes(y=Predicted.value), fill = 'seagreen')+
geom_point(aes(y=True.Mean), color = 'red', fill = 'red', alpha=0.3, size = 2.5, shape = 23)+
labs(title = "Best model estimates and actual data plot : Treatment + Location + Treatment x Location",
y= "True/predicted number of mosquitoes")+
theme(axis.text.x = element_text(angle = 90, size = 12),
plot.title = element_text(size = 15, hjust = 0.5),
axis.title.y = element_text(size = 15),
axis.title.x = element_text(size = 15))
View(predxNet_W)
