theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
summary(model_5_1_trial_range)
write.csv(tidy(model_5_1_trial_range), "Blood feeding best model.csv")
summary(model_5_1)
testfin <- glmer(Dead~Fed + Location + Treatment + + Fed*Treatment + Location * Treatment + Total.Loc + Total.Loc*Treatment +
diurnal_temp_range + (1 | marker)+ (1 | Sleeper), data = mf_mos_temp, family = binomial("logit"))
ss <- getME(testfin,c("theta","fixef"))
testfin <- update(testfin,start=ss,control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
summary(testfin)
summary(mor_fed_num_ms_diu_temp_range)
View(b)
predict_mor <- predict(mor_fed_num_ms_diu_temp_range, mf_mos_temp, type = "response")
b <- cbind(mf_mos_temp, predict_mor)
pred_mor <- cbind(mf_mos_temp, predict_mor)
View(mf_mos_temp)
ggplot(mf_mos, aes(color = Nets, fill = Nets))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality")+
scale_x_continuous(labels = c(0, 0.25,0.5,0.75,1.0))+
geom_smooth(data = pred_mor, aes(x=Fed, y = predict_mor), col = "black", method = "glm",
method.args = list(family = "binomial"))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
ggsave("Mortality corresponding blood feeding.jpeg", device = jpeg)
warnings()
model_4_2 <- glmer.nb(formula = Count~Location + WashedStatus + (1|Sleeper)  , data = n_mos)
summary(model_4_2)
model_4_3 <- glmer.nb(formula = Count~Treatment + Location + (1|Sleeper)  , data = n_mos)
summary(model_4_3)
summary(model_4_4)
model_4_5 <- glmer.nb(formula = Count~Location + Treatment + Location*Treatment+ (1|Sleeper), data = n_mos)
summary(model_4_5)
summary(testfin)
standard_mor <- glmer(Dead~Treatment, data = mf_mos_temp,
family = binomial("logit"))
standard_mor <- glm(Dead~Treatment, data = mf_mos_temp,
family = binomial("logit"))
summary(standard_mor)
###Model
mf_mos_temp$Treatment <- relevel(mf_mos_temp$Treatment, ref = "UTN")
standard_mor <- glm(Dead~Treatment, data = mf_mos_temp,
family = binomial("logit"))
summary(standard_mor)
####model
standard_bf <- glm(Fed~Treatment, data = mf_mos_temp,
family = binomial("logit"))
summary(standard_bf)
summary(model_5_1_trial_range)
write.csv(tidy(model_5_1_trial_range), "Blood feeding best model.csv")
summary(mor_fed_num_ms_diu_temp_range)
write.csv(tidy(mor_fed_num_ms_diu_temp_range), "Mortality n blood-fed n number n temp best model.csv")
write.csv(tidy(bf_num_loc_Rand), "Blood feeding best model.csv")
write.csv(tidy(model_5_1_trial_range), "Mosquito count best model.csv")
summary(model_5_1_trial_range)
summary(mor_fed_num_ms_diu_temp_range)
mor_fed_0_int <- glm(Dead ~ Fed + Location + Treatment + Fed*Treatment + Location * Treatment,
data = mor_fed, family = binomial("logit"))
summary(mor_fed_0_int)
mor_fed_1_int <- glm(Dead ~ Fed + Location + Fed * Location + Treatment + Fed*Treatment + Location * Treatment,
data = mor_fed, family = binomial("logit"))
summary(mor_fed_1_int)
mor_fed_obs_int <- glmer(Dead ~ Fed + Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | marker), data = mor_fed, family = binomial("logit"))
mor_fed_obs_int <- update(mor_fed_obs_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_obs_int)
mor_fed_1_obs_int <- glmer(Dead ~ Fed + Location + Fed*Location + Treatment + Fed*Treatment + Location * Treatment +
(1 | marker), data = mor_fed, family = binomial("logit"))
mor_fed_obs_int <- update(mor_fed_obs_int, control = glmerControl(optimizer = "bobyqa"))
mor_fed_1_obs_int <- update(mor_fed_1_obs_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_1_obs_int)
mor_fed_hut_int <- glmer(Dead ~ Fed + Location + Treatment + Fed*Treatment + Location * Treatment +
(1 | Hut), data = mor_fed, family = binomial("logit"))
summary(mor_fed_hut_int)
mor_fed_1_hut_int <- glmer(Dead ~ Fed + Location +Fed*Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | Hut), data = mor_fed, family = binomial("logit"))
mor_fed_1_hut_int <- update(mor_fed_1_hut_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_1_hut_int)
mor_fed_Slp_int <- glmer(Dead ~ Fed + Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | Sleeper), data = mor_fed, family = binomial("logit"))
mor_fed_Slp_int <- update(mor_fed_Slp_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_1_Slp)
summary(mor_fed_Slp_int)
mor_fed_1_Slp_int <- glmer(Dead ~ Fed + Location +Fed *Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | Sleeper), data = mor_fed, family = binomial("logit"))
summary(mor_fed_Slp_int)
summary(mor_fed_1_Slp_int)
summary(mor_fed_Slp_int)
summary(mor_fed_1_Slp_int)
mor_fed_obs_Slp_int <- glmer(Dead ~ Fed + Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | marker)+ (1 | Sleeper), data = mor_fed, family = binomial("logit"))
mor_fed_obs_Slp_int <- update(mor_fed_obs_Slp_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_obs_Slp_int)
mor_fed_obs_1_Slp_int <- glmer(Dead ~ Fed + Location + Fed*Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | marker)+ (1 | Sleeper), data = mor_fed, family = binomial("logit"))
mor_fed_obs_1_Slp_int <- update(mor_fed_obs_1_Slp_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_obs_1_Slp_int)
mor_fed_obs_Hut_int <- glmer(Dead ~ Fed + Location + Treatment +Fed*Treatment + Location * Treatment +
(1 | marker)+ (1 | Hut), data = mor_fed, family = binomial("logit"))
mor_fed_obs_Hut_int <- update(mor_fed_obs_Hut_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_obs_Hut_int)
mor_fed_obs_1_Hut_int <- glmer(Dead ~ Fed + Location + Fed*Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | marker)+ (1 | Hut), data = mor_fed, family = binomial("logit"))
mor_fed_obs_1_Hut_int <- update(mor_fed_obs_1_Hut_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_obs_1_Hut_int)
mor_fed_Hut_Slp_int <- glmer(Dead ~ Fed + Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | Sleeper)+ (1 | Hut), data = mor_fed, family = binomial("logit"))
summary(mor_fed_Hut_Slp_int)
mor_fed_Hut_1_Slp_int <- glmer(Dead ~ Fed + Location + Fed*Location + Treatment + Fed*Treatment +Location * Treatment +
(1 | Sleeper)+ (1 | Hut), data = mor_fed, family = binomial("logit"))
mor_fed_Hut_1_Slp_int <- update(mor_fed_Hut_1_Slp_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_Hut_1_Slp_int)
mor_fed_rand_int <- glmer(Dead ~ Fed + Location + Treatment + Location * Treatment + Fed*Treatment + (1 | marker) +
(1 | Sleeper)+ (1 | Hut), data = mor_fed, family = binomial("logit"))
mor_fed_rand_int <- update(mor_fed_rand_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_rand_int)
mor_fed_1_rand_int <- glmer(Dead ~ Fed + Location +Fed*Location + Treatment + Fed*Treatment +Location * Treatment + (1 | marker) +
(1 | Sleeper)+ (1 | Hut), data = mor_fed, family = binomial("logit"))
mor_fed_1_rand_int <- update(mor_fed_1_rand_int, control = glmerControl(optimizer = "bobyqa"))
summary(mor_fed_1_rand_int)
summary(mor_fed_num_ms_1)
mor_fed_num_rand <- glmer(Dead~Fed + Location + Treatment + Location * Treatment + Total.Loc + Total.Loc*Treatment +
(1 | marker)+ (1 | Sleeper) +(1|Hut), data = mor_fed, family = binomial("logit"))
ss <- getME(mor_fed_num_rand,c("theta","fixef"))
mor_fed_num_rand <- update(mor_fed_num_rand,start=ss,control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
summary(mor_fed_num_rand)
mor_fed_num_ms_1_rand <- glmer(Dead~Fed + Location+Fed*Location + Treatment + Location * Treatment + Total.Loc + Total.Loc*Treatment +
(1 | marker)+ (1 | Sleeper)+(1|Hut), data = mor_fed, family = binomial("logit"))
ss <- getME(mor_fed_num_ms_1_rand,c("theta","fixef"))
mor_fed_num_ms_1_rand <- update(mor_fed_num_ms_1_rand,start=ss,control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
summary(mor_fed_num_ms_1_rand)
library(lme4)
library(tidyverse)
library(DHARMa)
library(lubridate)
library(MASS)
library(merTools)
library(ggpubr)
library(ggpmisc)
library(fitdistrplus)
library(broom)
663*0.68
###Adding individual random effect to model 1
View(Tengrela_R1A_rm)
View(dataCB_rm)
colSums(dataCB_rm[,17:22])
summarise()
dataCB_rm %>%
group_by(Treatment, Area) %>%
summarise()
Tengrela_R1A_Sum %>%
group_by(Treatment, Area) %>%
summarise()
Location(Tengrela_R1A_Sum)
View(Tengrela_R1A_Sum)
View(Tengrela_R1A_rm)
View(dataCB_rm)
View(subset(dataCB_rm, dataCB_rm$Date < "2020-01-01" & dataCB_rm$Village == "Tengrela")
)
select(dataCB_rm, Village)
dplyr::select(dataCB_rm, Village)
help("select")
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!Village)
colnames(dataCB_rm)
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year))
colnames(dataCB_rm)
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay))
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Treatment, Area) %>%
summarise()
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
summarise()
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Date, Treatment, Area) %>%
summarise()
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Date, Treatment) %>%
summarise()
View(dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Date, Treatment) %>%
summarise())
216/6
colnames(dataCB_rm)
sum(dataCB_rm$An.gambiae.sl)
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Date, Treatment) %>%
summarise(A.gambiae = sum(An.gambiae.sl),
Other.Anophelines = Other.Anophelines,
Aedes.sp = Aedes.sp,
Culex.sp = sum(Culex.sp),
Mansonia.sp = sum(Mansonia.sp))
dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Date, Treatment) %>%
summarise(A.gambiae = sum(An.gambiae.sl),
Other.Anophelines = Other.Anophelines,
Aedes.sp = Aedes.sp,
Culex.sp = sum(Culex.sp),
Mansonia.sp = sum(Mansonia.sp))%>%
distinct()
a <- dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Date, Treatment) %>%
summarise(A.gambiae = sum(An.gambiae.sl),
Other.Anophelines = Other.Anophelines,
Aedes.sp = Aedes.sp,
Culex.sp = sum(Culex.sp),
Mansonia.sp = sum(Mansonia.sp))%>%
distinct()
View(a)
a <- dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Date, Treatment) %>%
summarise(A.gambiae = sum(An.gambiae.sl),
Other.Anophelines = sum(Other.Anophelines),
Aedes.sp = sum(Aedes.sp),
Culex.sp = sum(Culex.sp),
Mansonia.sp = sum(Mansonia.sp))
View(a)
a <- dataCB_rm %>%
subset(Date < "2020-01-01" & Village == "Tengrela") %>%
dplyr::select(!c(Round, Village,Year, Week, Day, Row.ID, nDay, marker)) %>%
group_by(Treatment, Area) %>%
summarise(A.gambiae = sum(An.gambiae.sl),
Other.Anophelines = sum(Other.Anophelines),
Aedes.sp = sum(Aedes.sp),
Culex.sp = sum(Culex.sp),
Mansonia.sp = sum(Mansonia.sp))
write.csv(tidy(a), "Data sum.csv")
write.csv(a, "Data sum.csv")
View(dataCB_rm)
View(dataCB_rm %>% subset(Date < "2020-01-01"))
error_find <- dataCB_rm %>% subset(Date < "2020-01-01")
error_find[c(79,1144,5167),]
nrow(error_find)
View(error_find)
levels(error_find$Date)
levels(as.Date(error_find$Date))
ggplot(data = temp_data_plot, aes(x = f_date, y = Temp, col = Site)) +
geom_line(size = 0.75) +
geom_point(data = subset(temp_data_plot, interpolate == "yes"),
aes(x = f_date, y = Temp, group = Site), col = "black", size = 0.1) +
facet_grid(vars(Location), vars(house)) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Time") +
ylab("Temperature (°C)")
View(hourly_temp_data)
View(BF_temp)
ggplot(data = BF_data, aes(x = Date, y = temp, col = Site)) +
geom_line(size = 0.75) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Time") +
ylab("Temperature (°C)")
###Plot by Issac
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Time") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange") +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "grey", size = 0.6, alpha = 0.8) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Time") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.7) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "grey", size = 0.6, alpha = 0.8) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Time") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.7) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "grey", size = 0.6, alpha = 0.8) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.7) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "grey", size = 0.6, alpha = 0.8) +
geom_line(aes(x=Date, y= trial_mean_temp),
size = 0.75, color = "red", alpha = 0.7) +
geom_line(aes(x=Date, y= mean_temp),
size = 0.75, color = "black", alpha = 0.7) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.7) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "grey", size = 0.6, alpha = 0.8) +
geom_line(data = BF_temp, aes(x=Date, y= trial_mean_temp),
size = 0.75, color = "red", alpha = 0.7) +
geom_line(data = BF_temp, aes(x=Date, y= mean_temp),
size = 0.75, color = "black", alpha = 0.7) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
ggsave("Temperature data.jpeg", device = jpeg)
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.7) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "blue", size = 0.6, alpha = 0.8) +
geom_line(data = BF_temp, aes(x=Date, y= trial_mean_temp),
size = 0.75, color = "red", alpha = 0.7) +
geom_line(data = BF_temp, aes(x=Date, y= mean_temp),
size = 0.75, color = "black", alpha = 0.7) +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.7) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "blue", size = 0.6, alpha = 0.8) +
geom_line(data = BF_temp, aes(x=Date, y= trial_mean_temp),
size = 0.75, color = "red") +
geom_line(data = BF_temp, aes(x=Date, y= mean_temp),
size = 0.75, color = "black") +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.7) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "skyblue", size = 0.6, alpha = 0.8) +
geom_line(data = BF_temp, aes(x=Date, y= trial_mean_temp),
size = 0.75, color = "red") +
geom_line(data = BF_temp, aes(x=Date, y= mean_temp),
size = 0.75, color = "black") +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.8) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "skyblue", size = 0.6) +
geom_line(data = BF_temp, aes(x=Date, y= trial_mean_temp),
size = 0.75, color = "red") +
geom_line(data = BF_temp, aes(x=Date, y= mean_temp),
size = 0.75, color = "black") +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
ggsave("Temperature data.jpeg", device = jpeg)
View(BF_data)
#############################
### ERA5 data for Tengrela ###
#############################
BF_data <- as.data.frame(read_csv(file = "temp data/t2m_2019_BF_Tengrela.csv")) %>%
mutate(Date = as.Date(time),
time = hour(time),
Site = "Tengrela",
Hut = "ERA5",
temp = t2m -  273.5,
min_temp = NA,
max_temp = NA) %>%
filter(Date >= "2019-09-08" & Date <= "2019-10-18")
View(BF_data)
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(aes(x= time, y = temp),size = 0.75, color = "orange", alpha = 0.8) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "skyblue", size = 0.6) +
geom_line(data = BF_temp, aes(x=Date, y= trial_mean_temp),
size = 0.75, color = "red") +
geom_line(data = BF_temp, aes(x=Date, y= mean_temp),
size = 0.75, color = "black") +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
###Plot the diurnal temperature range and the night temperature range together
ggplot(data = BF_data, aes(x = Date, y = temp)) +
geom_line(size = 0.75, color = "orange", alpha = 0.8) +
geom_line(data = subset(BF_data, time >= 20 | time <= 6),
aes(x = Date, y = temp), col = "skyblue", size = 0.6) +
geom_line(data = BF_temp, aes(x=Date, y= trial_mean_temp),
size = 0.75, color = "red") +
geom_line(data = BF_temp, aes(x=Date, y= mean_temp),
size = 0.75, color = "black") +
theme_bw() + theme(text = element_text(size = 15)) +
xlab("Date") +
ylab("Temperature (°C)")
ggplot(bf_quant, aes(color = Location, fill = Location))+
geom_point(aes(x = Total.Loc, y = Bloodfed))+
facet_grid(vars(Location), vars(WashedStatus))+
labs(title = "Blood-feeding correponding to number of mosquitoes",
x = "Number of mosquitoes", y = "Blood-feeding rate")+
geom_smooth(aes(x = Total.Loc, y = Fed),formula = y~x,method = glm, method.args= list(family="binomial"))+
theme_bw()
pred_bf
pred_bf <- predict(bf_num_loc_Rand, mor_fed, type = "response")
pred_bf
View(bf_quant)
bf_quant <- cbind(bf_quant, pred_bf)
View(bf_quant)
ggplot(bf_quant, aes(color = Location, fill = Location))+
geom_point(aes(x = Total.Loc, y = Bloodfed))+
facet_grid(vars(Location), vars(WashedStatus))+
labs(title = "Blood-feeding correponding to number of mosquitoes",
x = "Number of mosquitoes", y = "Blood-feeding rate")+
geom_smooth(aes(x = Total.Loc, y = pred_bf),formula = y~x,method = glm, method.args= list(family="binomial"))+
theme_bw()
bf_quant$WashedStatus <-  relevel(as.factor(bf_quant$WashedStatus), ref = "UTN")
ggplot(bf_quant, aes(color = Location, fill = Location))+
geom_point(aes(x = Total.Loc, y = Bloodfed))+
facet_grid(vars(Location), vars(WashedStatus))+
labs(title = "Blood-feeding correponding to number of mosquitoes",
x = "Number of mosquitoes", y = "Blood-feeding rate")+
geom_smooth(aes(x = Total.Loc, y = pred_bf),formula = y~x,method = glm, method.args= list(family="binomial"))+
theme_bw()
ggplot(mf_mos, aes(color = Nets, fill = Nets))+
geom_point(aes(x = Bloodfed, y = Mortality))+
facet_grid(vars(Location), vars(Treatment))+
labs(title = "Mortality correponding to blood-feeding",
x = "Blood-feeding rate", y = "Mortality")+
scale_x_continuous(labels = c(0, 0.25,0.5,0.75,1.0))+
geom_smooth(data = pred_mor, aes(x=Fed, y = predict_mor), col = "black", method = "glm",
method.args = list(family = "binomial"))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.text = element_text(size = 11),
axis.title = element_text(size = 12),
strip.text = element_text(size = 12),
legend.text = element_text(size = 11),
legend.title = element_text(size = 12))
ggplot(bf_quant, aes(color = Location, fill = Location))+
geom_point(aes(x = Total.Loc, y = Bloodfed))+
facet_grid(vars(Location), vars(WashedStatus))+
labs(title = "Blood-feeding correponding to number of mosquitoes",
x = "Number of mosquitoes", y = "Blood-feeding rate")+
geom_smooth(aes(x = Total.Loc, y = pred_bf),formula = y~x,method = glm, method.args= list(family="binomial"))+
theme_bw()
ggsave("Blood feeding status by number of mosquitoes.jpeg", device = jpeg,
width = 8, height = 5.5)
ggplot(bf_quant, aes(color = Location, fill = Location))+
geom_point(aes(x = Total.Loc, y = Bloodfed))+
facet_grid(vars(Location), vars(WashedStatus))+
labs(title = "Blood-feeding correponding to number of mosquitoes",
x = "Number of mosquitoes", y = "Blood-feeding rate")+
geom_smooth(aes(x = Total.Loc, y = pred_bf),formula = y~x,method = glm,
method.args= list(family="binomial"), col = "black")+
theme_bw()
ggsave("Blood feeding status by number of mosquitoes.jpeg", device = jpeg,
width = 8, height = 5.5)
summary(mor_fed_num_ms_diu_temp_range)
###Model
mf_mos_temp$Treatment <- relevel(mf_mos_temp$Treatment, ref = "UTN")
mor_fed_num_ms_diu_temp_range <- glmer(Dead~Fed + Location + Treatment + Location * Treatment + Total.Loc + Total.Loc*Treatment +
diurnal_temp_range + (1 | marker)+ (1 | Sleeper), data = mf_mos_temp, family = binomial("logit"))
ss <- getME(mor_fed_num_ms_diu_temp_range,c("theta","fixef"))
mor_fed_num_ms_diu_temp_range <- update(mor_fed_num_ms_diu_temp_range,start=ss,control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=5e5)))
summary(mor_fed_num_ms_diu_temp_range)
write.csv(tidy(mor_fed_num_ms_diu_temp_range), "Mortality n blood-fed n number n temp best model.csv")
summary(standard_bf)
summary(standard_mor)
standard_mor_mix <- glmer(Dead~Treatment + (1|marker) + (1|Hut), data = mf_mos_temp,
family = binomial("logit"))
summary(standard_mor_mix)
standard_bf_ws <- glm(Fed~WashedStatus, data = mf_mos_temp,
family = binomial("logit"))
summary(standard_bf_ws)
summary(mor_fed_num_ms_temp)
